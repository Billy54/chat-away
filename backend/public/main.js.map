{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/topbar/topbar.component.ts","./src/app/topbar/topbar.component.html","./src/app/services/users.service.ts","./src/app/Models/notification.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/data.service.ts","./src/app/home/conversation.directive.ts","./src/app/services/data-share.service.ts","./src/app/services/auth-guard.service.ts","./src/app/services/socketio.service.ts","./src/app/status/status.component.ts","./src/app/status/status.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/comments.service.ts","./src/app/comment/comment.component.ts","./src/app/comment/comment.component.html","./src/app/Models/room.ts","./src/app/chat-area/chat-area.component.ts","./src/app/chat-area/chat-area.component.html","./src/app/app.module.ts","./src/app/chat-rooms/chat-rooms.component.ts","./src/app/chat-rooms/chat-rooms.component.html","./src/app/services/comment-factory.service.ts","./src/app/services/file.service.ts","./src/app/register/password.validators.ts","./src/app/services/auth.service.ts","./src/app/register/email.validator.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/input-field/input-field.component.ts","./src/app/input-field/input-field.component.html","./src/app/chat-rooms/user.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/chat-area/chat.directive.ts","./src/main.ts","./src/app/services/error-handler.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACW;AAEhB;AACF;;;;;;AAS3C,MAAM,iBAAiB;IAM5B,YAAY,CAAc,EAAE,CAAS,EAAU,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAHlE,cAAS,GAAW,EAAE,CAAC;QAC/B,aAAQ,GAAY,KAAK,CAAC;QAU1B,iBAAY,GAAG,IAAI,wDAAS,CAAC;YAC3B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzE,KAAK,EAAE,IAAI,0DAAW,CACpB,EAAE,EACF,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,EAChE,gEAAe,CAAC,cAAc,CAC/B;YACD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;aACxB,CAAC;YACF,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC7B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,sEAAS,EAAE;aACZ,CAAC;SACH,CAAC,CAAC;QAvBD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,EAAE;YAClD,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,uCAAuC;QAC7D,CAAC,CAAC,CAAC;IACL,CAAC;IAoBD,QAAQ;QACN,4BAA4B;QAC5B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,OAAO;SACR;QAED,IAAI,CAAC,WAAW;aACb,QAAQ,CACP,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAC5B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAC7B,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAChC,UAAU,CACX;aACA,SAAS,CAAC,CAAC,WAAgB,EAAE,EAAE,EAAE;YAChC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;IACf,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC5C,CAAC;IAED,QAAQ,CAAC,GAAQ;QACf,IAAI,CAAC,SAAS,GAAsB,GAAG,CAAC,MAAO,CAAC,KAAe,CAAC;QAChE,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,QAAQ,KAAU,CAAC;;kFA7ER,iBAAiB;iGAAjB,iBAAiB;QCb9B,yEACI;QAAA,yEACI;QAAA,wEAAqB;QAAA,kEAAO;QAAA,4DAAK;QACjC,uEAA8D;QAAzB,oIAAS,iBAAa,IAAE;QAAC,4DAAI;QAClE,oEAA6C;QAC7C,0EACI;QAD6B,6IAAY,cAAU,IAAC;QACpD,yEACI;QAAA,sEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,uEACJ;QAAA,4DAAM;QACN,0EACI;QAAA,4EACJ;QADuD,+IAAS,oBAAgB,IAAC;QAA7E,4DACJ;QAAA,4DAAM;QACN,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,8EAAwE;QAAA,mEAAO;QAAA,4DAAS;QAC5F,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,sEAAsD;;QAtBzB,iFAA0B;QAKzC,0DAA0B;QAA1B,uFAA0B;QACC,0DAA4D;QAA5D,sHAA4D;QAG5D,0DAA8D;QAA9D,wHAA8D;QAG9D,0DAAoE;QAApE,8HAAoE;QAGpE,0DAAkE;QAAlE,4HAAkE;QAOtF,0DAA0B;QAA1B,iFAA0B;;6FDTlC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOuB;AAI+B;;;;;;;;;;;;;ICalC,0EACI;IAAA,qEACA;IAAA,0EACI;IAAA,0EAAqB;IAAA,uDAAqC;IAAA,4DAAM;IAChE,0EAAgC;IAAA,wEAAO;IAAA,wEAAa;IAAA,4DAAQ;IAAA,4DAAM;IACtE,4DAAM;IACV,4DAAM;;;IAHuB,0DAAqC;IAArC,8GAAqC;;ADL/E,MAAM,eAAe;IAmB1B,YACE,CAAc,EACd,CAAS,EACT,EAAmB,EACnB,SAA2B,EACnB,WAAwB,EACxB,WAAyB;QADzB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAc;QAnB5B,qBAAgB,GAAmB,EAAE,CAAC;QACtC,YAAO,GAAY,IAAI,CAAC;QACxB,kBAAa,GAAY,IAAI,CAAC;QAC9B,YAAO,GAAY,IAAI,CAAC;QAExB,QAAG,GAAW,iBAAiB,CAAC;QAChC,cAAS,GAAW,OAAO,CAAC;QAC5B,QAAG,GAAW,EAAE,CAAC;QACjB,SAAI,GAAW,EAAE,CAAC;QAavB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;IACpC,CAAC;IACD,eAAe;QACb,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;IAC1C,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;IACH,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,WAAgB,EAAE,EAAE,EAAE;YACjE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,kBAAkB,CAAC,IAAS;QAC1B,IAAI,YAAY,GAAG,IAAI,iEAAY,EAAE,CAAC;QACtC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC1C,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;QACpC,4BAA4B;QAC5B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3C,CAAC;IAED,YAAY;QACV,IAAI,CAAC,GAAG,GAAG,oBAAoB,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,GAAG,GAAG,iBAAiB,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QACzB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAC1D,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,aAAa;QACX,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAI,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC;QACtB,MAAM,CAAC,MAAM,GAAG,UAAU,CAAM;YAC9B,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;QACjE,CAAC,CAAC;QACF,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YACnC,MAAM,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;YAC1B,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,WAAW;iBACb,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC;iBACxB,SAAS,CAAC,CAAC,WAAgB,EAAE,EAAE,EAAE;gBAChC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACzB,IAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YACnD,IAAI,IAAI,CAAC,MAAM,IAAI,SAAS;gBAAE,OAAO;YACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW;aACb,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;aACrD,SAAS,CAAC,CAAC,WAAgB,EAAE,EAAE,EAAE;YAChC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/B,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;;8EAzHU,eAAe;+FAAf,eAAe;;;;;;;;QCtB5B,yEAAuE;QAAlD,oIAAS,kBAAc,IAAC;QAA0B,4DAAM;QAC7E,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,kEAAyC;QAC7C,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,kEAAkC;QACtC,4DAAM;QACN,yEACI;QAAA,kEAAmC;QACvC,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,2EACI;QADuC,qIAAS,wBAAoB,IAAC;QACrE,oEAAsC;QAC1C,4DAAM;QACN,2EACI;QAAA,0EAAkE;QAAA,yEAAa;QAAA,4DAAK;QACpF,sEAAuC;QACvC,2EACI;QAAA,8GAMM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,2EACI;QADoC,qIAAS,kBAAc,IAAC;QAC5D,oEAA2C;QAC/C,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,2EACI;QADgC,qIAAS,kBAAc,IAAC;QACxD,sEACA;QAAA,2EACI;QAAA,0EAAiD;QAAA,wDAAQ;QAAA,4DAAK;QAC9D,yEAAO;QAAA,yEAAa;QAAA,4DAAQ;QAChC,4DAAM;QACV,4DAAM;QACN,sEAA2B;QAC3B,2EACI;QADiB,qIAAS,YAAQ,IAAC;QACnC,oEAAmC;QACnC,0EAA6B;QAAA,mEAAO;QAAA,4DAAK;QAC7C,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,yEAAmD;QAAlB,mIAAS,WAAO,IAAC;QAAC,4DAAI;QACvD,0EAAgE;QAAA,0EAAc;QAAA,4DAAK;QACnF,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,iFACA;QADmB,yIAAU,mBAAe,IAAC;QAA7C,4DACA;QAAA,wEAAiC;QACrC,4DAAO;QACP,2EACI;QAAA,4EACM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,sEAA2B;QAC3B,2EACI;QADuB,qIAAS,YAAQ,IAAC;QACzC,oEAA6B;QAC7B,0EAA6B;QAAA,kEAAM;QAAA,4DAAK;QAC5C,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA7EwC,gFAAwB;QAiBgB,2DAAsC;QAAtC,8FAAsC;QAGhF,0DAA8B;QAA9B,sFAA8B;QAIS,0DAAmB;QAAnB,yFAAmB;QAWzB,0DAAgC;QAAhC,wFAAgC;QAGpD,0DAA6B;QAA7B,sFAA6B;QAAC,gFAAwB;QAC3E,0DAAuB;QAAvB,+EAAuB;QAE9B,0DAAW;QAAX,qIAAW;QAEqC,0DAAQ;QAAR,yEAAQ;QAUjD,0DAAuB;QAAvB,+EAAuB;QAUR,2DAAwC;QAAxC,qGAAwC;;6FDzC9E,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;igBAiB4B,OAAO;kBAAjC,uDAAS;mBAAC,cAAc;YACL,QAAQ;kBAA3B,uDAAS;mBAAC,OAAO;;;;;;;;;;;;;;AEtCpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACE;;;;AAMtC,MAAM,YAAa,SAAQ,yDAAW;IAC3C,YAAY,IAAgB,EAAE,EAAuB;QACnD,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,wBAAwB,CAAC,CAAC;IAC5C,CAAC;;wEAHU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAO,MAAM,YAAY;IAAzB;QACS,SAAI,GAAW,EAAE,CAAC;QAClB,OAAE,GAAW,CAAC,CAAC;QACf,SAAI,GAAW,EAAE,CAAC;IAC3B,CAAC;CAAA;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;;AAetD,MAAM,aAAa;IAQxB,YACU,aAA8B,EAC9B,SAA2B,EAC3B,CAAS;QAFT,kBAAa,GAAb,aAAa,CAAiB;QAC9B,cAAS,GAAT,SAAS,CAAkB;QAC3B,MAAC,GAAD,CAAC,CAAQ;QAVZ,aAAQ,GAAW,EAAE,CAAC;QACtB,SAAI,GAAW,EAAE,CAAC;IAUtB,CAAC;IAEJ,eAAe;QACb,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAM,EAAE,EAAE;YACxC,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,UAAe,EAAE,EAAE,EAAE;YACrD,IAAI,OAAO,CAAC,IAAI,IAAI,SAAS,EAAE;gBAC7B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC;gBAC7B,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;gBACvB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAClC,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE;YACrC,IAAI,EAAE,IAAI,EAAE;gBAAE,OAAO;YACrB,IAAI,IAAI,CAAC,IAAI,IAAI,aAAa,EAAE;gBAC9B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;aAC3B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;IAClB,eAAe;QACb,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC;QAClE,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,YAAY,CAAC,MAAe;QAC1B,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;SACxB;IACH,CAAC;;0EAtDU,aAAa;6FAAb,aAAa;;;;;;QCjB1B,wEAAyB;QACzB,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACJ;QAAA,4DAAM;QACN,yEACI;QAAA,qEAAI;QAAA,uDAAY;QAAA,4DAAK;QACrB,wEAAO;QAAA,uDAAQ;QAAA,4DAAQ;QAC3B,4DAAM;QACV,4DAAM;QACN,6EACI;QAAA,+EAA+C;QACnD,4DAAM;QACN,0EAA2B;QAC/B,4DAAM;;QAXW,0DAAW;QAAX,qIAAW;QAGZ,0DAAY;QAAZ,6EAAY;QACT,0DAAQ;QAAR,yEAAQ;;6FDSd,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;qRAOoB,QAAQ;kBAA1B,uDAAS;mBAAC,MAAM;;;;;;;;;;;;;;AEvBnB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,eAAe,EAAE,uBAAuB;CACzC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACZ;AAEP;;;;AAMrC,MAAM,WAAW;IAMtB,YACE,IAAgB,EAChB,EAAuB,EACP,GAAW;QAE3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QAEf,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAClC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;IAC7D,CAAC;IAED,iBAAiB;IACjB,MAAM,CAAC,GAAW;QAChB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;aACjC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,cAAc,CAAC,GAAW;QACxB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;aACjC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,WAAW,CAAC,GAAW,EAAE,QAAa;QACpC,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC;aAC5C,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,mBAAmB;IACnB,OAAO,CAAC,GAAW;QACjB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;aACjC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,aAAa;IACb,UAAU,CAAC,GAAW,EAAE,IAAS;QAC/B,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;aACxC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,YAAY;IACZ,SAAS,CAAC,GAAW;QACnB,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;aACjC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;;sEA1DU,WAAW,sTASZ,MAAM;8FATL,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;sBAUI,oDAAM;uBAAC,MAAM;;;;;;;;;;;;;;ACjBlB;AAAA;AAAA;AAA0C;;AAKnC,MAAM,qBAAqB;IAChC,YAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;;0FAD9C,qBAAqB;qGAArB,qBAAqB;6FAArB,qBAAqB;cAHjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;aAC9B;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAA2C;AACJ;;AAKhC,MAAM,gBAAgB;IAC3B,yBAAyB;IAEzB;QACQ,gBAAW,GAAG,IAAI,oDAAe,CAAC,SAAS,CAAC,CAAC;QACrD,mBAAc,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAKjD,iCAAiC;QACzB,eAAU,GAAG,IAAI,oDAAe,CAAS;YAC/C,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,CAAC;SACR,CAAC,CAAC;QACH,YAAO,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAMzC,mDAAmD;QAC3C,gBAAW,GAAG,IAAI,oDAAe,CAAS;YAChD,MAAM,EAAE,SAAS;SAClB,CAAC,CAAC;QACH,WAAM,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;QAKzC,mDAAmD;QAC3C,cAAS,GAAG,IAAI,oDAAe,CAAS;YAC9C,MAAM,EAAE,SAAS;SAClB,CAAC,CAAC;QACH,UAAK,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAKtC,+EAA+E;QACvE,iBAAY,GAAG,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QAC/C,YAAO,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAM3C,eAAe;QACP,eAAU,GAAG,IAAI,oDAAe,CAAC,EAAE,CAAC,CAAC;QAC7C,WAAM,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAMxC,YAAY;QACJ,YAAO,GAAG,IAAI,oDAAe,CAAM,EAAE,CAAC,CAAC;QAC/C,mBAAc,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;QAMhD,2BAA2B;QACnB,cAAS,GAAG,IAAI,oDAAe,CAAS,EAAE,CAAC,CAAC;QACpD,cAAS,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IA9D7B,CAAC;IAGT,aAAa,CAAC,MAAc;QACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAQM,YAAY,CAAC,IAAS;QAC3B,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS;YAAE,OAAO;QACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAOM,UAAU,CAAC,CAAM;QACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAOM,SAAS,CAAC,CAAM;QACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAKM,YAAY,CAAC,EAAU;QAC5B,IAAI,EAAE,IAAI,EAAE;YAAE,OAAO;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAKM,YAAY,CAAC,EAAU;QAC5B,IAAI,EAAE,IAAI,EAAE;YAAE,OAAO;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;IAKM,OAAO,CAAC,GAAQ;QACrB,IAAI,GAAG,IAAI,EAAE;YAAE,OAAO;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAKM,OAAO,CAAC,GAAQ;QACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;;gFApEU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAOpC,MAAM,gBAAgB;IAI3B,YAAY,CAAc,EAAE,CAAS;QACnC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAClB,CAAC;IAED,oCAAoC;IACpC,WAAW;QACT,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE;YACtC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,OAAO,KAAK,CAAC;IACf,CAAC;;gFAhBU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACL;;;;AAOvC,MAAM,eAAe;IAE1B,YACU,IAAiB,EACjB,cAAgC;QADhC,SAAI,GAAJ,IAAI,CAAa;QACjB,mBAAc,GAAd,cAAc,CAAkB;IACvC,CAAC;IAEJ,qBAAqB;QACnB,uDAAuD;QACvD,IAAI,CAAC,MAAM,GAAG,2DAAE,CAAC,uBAAuB,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;QAEzD,0CAA0C;QAC1C,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,IAAS,EAAE,EAAE;YACrC,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC1C,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC3C;QACH,CAAC,CAAC,CAAC;QAEH,qBAAqB;QACrB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,IAAS,EAAE,EAAE;YACtC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAEH,iDAAiD;QACjD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAS,EAAE,EAAE;YACnC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;IACf,aAAa,CAAC,OAAY;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACvC,CAAC;IAED,sBAAsB;IACtB,gBAAgB;QACd,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;SAC1B;IACH,CAAC;;8EAzCU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;;6FDOP,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;ICAlD,wEAA0C;;ADSnC,MAAM,YAAY;IAIvB,YAAY,CAAc;QAH1B,UAAK,GAAG,SAAS,CAAC;QAIhB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACvB,CAAC;IAED,QAAQ,KAAI,CAAC;IAEN,MAAM;QACX,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;IAC5C,CAAC;;wEAZU,YAAY;4FAAZ,YAAY;QCTzB,sHAA0C;QAE1C,2EAA+B;;QAFlB,8EAAc;;6FDSd,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACE;;;;AAMtC,MAAM,eAAgB,SAAQ,yDAAW;IAC9C,YAAY,IAAgB,EAAE,EAAuB;QACnD,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,wBAAwB,CAAC,CAAC;IAC5C,CAAC;;8EAHU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;ICI7C,0EACI;IAAA,wEAAO;IAAA,uDAAmB;IAAA,4DAAQ;IACtC,4DAAM;;;IADK,0DAAmB;IAAnB,uFAAmB;;;IAG1B,qEACA;;;IADK,wIAAW;;;IAChB,qEAAiD;;;IAP7D,yEACI;IAAA,yEACI;IAAA,wHAEM;IACN,yEACI;IAAA,wHACA;IAAA,wHAAiD;IACjD,yEACI;IAAA,uDACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAX8B,0DAAa;IAAb,gFAAa;IAInB,0DAAa;IAAb,gFAAa;IACJ,0DAAc;IAAd,iFAAc;IAErC,0DACJ;IADI,4FACJ;;;IAMZ,0EACI;IAAA,yEACI;IAAA,yEACI;IAAA,yEACI;IAAA,uDACJ;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAJU,0DACJ;IADI,4FACJ;;;IAvBhB,sEACI;IACA,kHAaM;IAGN,kHAQM;IACV,4DAAM;;;IAzB4C,0DAAa;IAAb,gFAAa;IAgBjB,0DAAc;IAAd,iFAAc;;ADVrD,MAAM,gBAAgB;IAC3B,YAAY,aAAoC;QAGvC,YAAO,GAAY,KAAK,CAAC;QACzB,YAAO,GAAY,IAAI,CAAC;QACxB,QAAG,GAAW,EAAE,CAAC;QAC1B,qBAAgB,GAAY,IAAI,CAAC;IANkB,CAAC;IAQpD,QAAQ;QACN,IACE,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;YACpB,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE;YAC1B,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,SAAS;YACjC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,SAAS,EAC7B;YACA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;IACH,CAAC;;gFAlBU,gBAAgB;gGAAhB,gBAAgB;QCR7B,4GA2BM;;QA3BA,sFAAsB;;6FDQf,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;uIAIU,IAAI;kBAAZ,mDAAK;YACG,OAAO;kBAAf,mDAAK;YACG,OAAO;kBAAf,mDAAK;YACG,GAAG;kBAAX,mDAAK;;;;;;;;;;;;;;AEdR;AAAA;AAAO,MAAM,IAAI;IAKf,YAAY,IAAS,EAAE,EAAO;QAJtB,iBAAY,GAAQ,KAAK,EAAU,CAAC;QACpC,aAAQ,GAAW,EAAE,CAAC;QACtB,gBAAW,GAAW,EAAE,CAAC;QAG/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAEM,UAAU,CAAC,OAAY;QAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;CACF;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMuB;AACyC;AAC1B;AAMW;;;;;;;AAO1C,MAAM,iBAAiB;IAY5B,YACU,wBAAkD,EAClD,SAA2B,EAC3B,eAAgC,EAChC,IAAiB,EACjB,WAAwB;QAJxB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,cAAS,GAAT,SAAS,CAAkB;QAC3B,oBAAe,GAAf,eAAe,CAAiB;QAChC,SAAI,GAAJ,IAAI,CAAa;QACjB,gBAAW,GAAX,WAAW,CAAa;QAb1B,UAAK,GAAQ,KAAK,EAAQ,CAAC;QAG3B,UAAK,GAAG,CAAC,CAAC;QACV,WAAM,GAAG,0BAA0B,CAAC;QACpC,QAAG,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;QACjC,WAAM,GAAW,EAAE,CAAC;IAQzB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC7C,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS;gBAAE,OAAO;YACnC,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,UAAU;gBAAE,OAAO;YACvC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;YACxC,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QAEH,eAAe;QACf,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC3C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBAC/B,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,UAAU;oBAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,eAAe;QACf,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAC5C,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;aAC/B;YACD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;gBAChC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;aAC/B;YACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;gBAC/B,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,MAAM;oBAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC7D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,QAAa;QACpB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;YAChC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAA4C;IAC5C,kBAAkB,CAAC,IAAS;QAC1B,IAAI,CAAC,IAAI;YAAE,OAAO;QAClB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;QACxC,MAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAC5E,2EAAgB,CACjB,CAAC;QACF,MAAM,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,eAAe,CAC1C,gBAAgB,CACjB,CAAC;QACF,cAAc;QACd,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,GAAG,EAAE;YAC7B,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;gBACC,YAAY,CAAC,QAAS,CAAC,OAAO,GAAG,KAAK,CAAC;aAC3D;YACkB,YAAY,CAAC,QAAS,CAAC,OAAO,GAAG,IAAI,CAAC;YACzD,aAAa;SACd;aAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE;YAC/C,YAAY,CAAC,QAAS,CAAC,OAAO,GAAG,IAAI,CAAC;SAC1D;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAChB;QACkB,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QACnC,YAAY,CAAC,QAAS,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IAC9D,CAAC;IAED,OAAO;QACL,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC3B,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE;gBACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;gBAClC,OAAO;aACR;SACF;QACD,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,eAAe;aACjB,WAAW,CAAC,MAAM,EAAE;YACnB,QAAQ,EAAE,IAAI,CAAC,UAAU;YACzB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE;SACnC,CAAC;aACD,SAAS,CAAC,CAAC,WAAgB,EAAE,EAAE,EAAE;YAChC,IAAI,IAAI,GAAG,IAAI,iDAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACxD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW;aACb,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;aACtC,SAAS,CAAC,CAAC,WAAgB,EAAE,EAAE,EAAE;YAChC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC;YAC3B,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC;;kFApHU,iBAAiB;iGAAjB,iBAAiB;wEACjB,6DAAa;;;;;QCtB1B,0EAA+B;;6FDqBlB,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;icAGC,OAAO;kBADN,uDAAS;mBAAC,6DAAa,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;;;;;;;;;;;AEtB5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACe;AAEA;AACT;AACU;AACU;AACW;AACV;AACd;AACD;AACF;AACc;AACM;AACX;AACM;AACD;AACG;AACL;AACJ;AACW;AACR;AACS;AACjB;AACE;AACkB;AACZ;AACF;AACf;;AAyCtC,MAAM,SAAS;;wFAAT,SAAS,cAHR,2DAAY;4IAGb,SAAS,mBAfT;QACT,6EAAS;QACT,iEAAa;QACb,oEAAgB;QAChB,oFAAmB;QACnB,+EAAiB;QACjB,8EAAgB;QAChB,2EAAe;QACf,mEAAW;QACX,qEAAY;QACZ,2EAAe;KAChB,YAnBQ;YACP,mEAAmB;YACnB,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,6DAAS;YACT,2DAAW;SACZ,EAcS,4DAAY;mIAEX,SAAS,mBArClB,2DAAY;QACZ,qEAAc;QACd,gFAAiB;QACjB,kEAAa;QACb,yEAAe;QACf,+EAAiB;QACjB,iFAAiB;QACjB,4EAAgB;QAChB,wEAAa;QACb,mFAAqB;QACrB,oFAAkB;QAClB,uFAAmB;QACnB,yEAAe,aAGf,mEAAmB;QACnB,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;QAChB,6DAAS;QACT,2DAAW,aAeH,4DAAY;6FAEX,SAAS;cAvCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,qEAAc;oBACd,gFAAiB;oBACjB,kEAAa;oBACb,yEAAe;oBACf,+EAAiB;oBACjB,iFAAiB;oBACjB,4EAAgB;oBAChB,wEAAa;oBACb,mFAAqB;oBACrB,oFAAkB;oBAClB,uFAAmB;oBACnB,yEAAe;iBAChB;gBACD,OAAO,EAAE;oBACP,mEAAmB;oBACnB,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,6DAAS;oBACT,2DAAW;iBACZ;gBACD,SAAS,EAAE;oBACT,6EAAS;oBACT,iEAAa;oBACb,oEAAgB;oBAChB,oFAAmB;oBACnB,+EAAiB;oBACjB,8EAAgB;oBAChB,2EAAe;oBACf,mEAAW;oBACX,qEAAY;oBACZ,2EAAe;iBAChB;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;gBACzB,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACrED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AAInC;;;;;;;;ICUlB,0EACI;IAAA,qEACA;IAAA,0EACI;IAAA,yEAAiD;IAAA,uDAAqB;IAAA,4DAAK;IAC3E,4EACI;IAAA,uDACJ;IAAA,4DAAQ;IACZ,4DAAM;IACN,0EACI;IAAA,mEAA8B;IAClC,4DAAM;IACV,4DAAM;;;IAX4C,mFAA4B;IACrE,0DAA2B;IAA3B,oJAA2B;IAEqB,0DAAqB;IAArB,qFAAqB;IAElE,0DACJ;IADI,+FACJ;IAEiB,0DAA4B;IAA5B,kFAA4B;;;;IATzD,wEACI;IAD4D,+UAAwB;IACpF,oHAWM;IACV,4DAAK;;;IAZ2B,0DAAoB;IAApB,mFAAoB;;ADHrD,MAAM,kBAAkB;IAI7B,YACU,CAAS,EACT,WAAyB,EACzB,SAA2B;QAF3B,MAAC,GAAD,CAAC,CAAQ;QACT,gBAAW,GAAX,WAAW,CAAc;QACzB,cAAS,GAAT,SAAS,CAAkB;QAN7B,UAAK,GAAW,EAAE,CAAC;QACpB,aAAQ,GAAW,EAAE,CAAC;QACrB,eAAU,GAAW,CAAC,CAAC;IAK5B,CAAC;IAEJ,eAAe,KAAU,CAAC;IAE1B,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,WAAgB,EAAE,EAAE,EAAE;YAChE,KAAK,MAAM,IAAI,IAAI,QAAQ,CAAC,KAAK,EAAE;gBACjC,IAAI,OAAO,GAAG,IAAI,0CAAI,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1B;YACD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE;YACtC,IAAI,EAAE,IAAI,EAAE;gBAAE,OAAO;YACrB,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACnB,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE;YACrC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,OAAO,CAAC,EAAU;QAChB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE;gBAAE,OAAO;SACnC;QACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,WAAgB,EAAE,EAAE,EAAE;YACvE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,KAAU;QACnB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7B,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;gBAC1B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI;gBACpC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE;gBAChC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM;gBAChC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM;aACtC,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;gBACd,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,EAAE;aAClE,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;YAC3C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;YAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;IACH,CAAC;IAED,YAAY,CAAC,EAAU;QACrB,IAAI,EAAE,IAAI,EAAE;YAAE,OAAO;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAU,EAAE,EAAE;YAChC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,EAAE;gBACzB,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;YAC7B,IACE,CAAE,IAAI,CAAC,OAAO,CAAC,IAAe;iBAC3B,IAAI,EAAE;iBACN,WAAW,EAAE;iBACb,UAAU,CAAE,IAAI,CAAC,QAAmB,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,EAC7D;gBACA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;SACF;IACH,CAAC;;oFAnFU,kBAAkB;kGAAlB,kBAAkB;QCX/B,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,uEACI;QAAA,oEAAG;QAAA,gEAAK;QAAA,4DAAI;QAChB,4DAAO;QACX,4DAAM;QACN,0EACI;QAAA,kEAA8B;QAC9B,2EACJ;QAD2B,wLAAsB,iFAAU,gBAAY,IAAtB;QAA7C,4DACJ;QAAA,4DAAO;QACX,4DAAM;QACN,wEACI;QAAA,8GAaK;QACT,4DAAK;QACT,4DAAM;;QAnB6B,0DAAsB;QAAtB,iFAAsB;QAIX,0DAAY;QAAZ,iFAAY;;6FDF7C,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;;0FAFN,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;6FAEP,qBAAqB;cAHjC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACE;;;;AAMtC,MAAM,WAAY,SAAQ,yDAAW;IAC1C,YAAY,IAAgB,EAAE,EAAuB;QACnD,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,wBAAwB,CAAC,CAAC;IAC5C,CAAC;;sEAHU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAO,SAAS,SAAS;IACvB,OAAO,CAAC,OAAwB,EAA2B,EAAE;QAC3D,IAAI,eAAe,GAAG,OAAO,CAAC,KAAe,CAAC;QAC9C,IAAI,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAW,CAAC;QAEtD,IAAI,eAAe,IAAI,QAAQ,EAAE;YAC/B,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;SAC7B;QACD,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACpB;AACG;AAEF;AACR;AACkB;;;;AAK/C,MAAM,WAAW;IAOtB,YAAY,IAAgB,EAAE,EAAuB;QAJpC,QAAG,GAAG,wBAAwB,CAAC;QAK9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;QAExC,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAClC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;IAC7D,CAAC;IAED,6BAA6B;IACtB,eAAe;QACpB,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAW,CAAC;QACpD,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YACxC,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,qBAAqB;IACd,WAAW;QAChB,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAW,CAAC;QACpD,IAAI,GAAG,GAAQ,0DAAU,CAAC,KAAK,CAAC,CAAC;QACjC,OAAO,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC;IAC9E,CAAC;IAED,wCAAwC;IACjC,WAAW,CAAC,KAAU;QAC3B,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,uBAAuB;IAChB,cAAc;QACnB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,6BAA6B;IACtB,QAAQ,CACb,KAAa,EACb,QAAgB,EAChB,GAAW;QAEX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CACnB,IAAI,CAAC,GAAG,GAAG,GAAG,EACd,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,EACpC,IAAI,CAAC,OAAO,CACb,CAAC;IACJ,CAAC;IAED,QAAQ;IACD,MAAM,CAAC,GAAW;QACvB,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;YAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,OAAO,IAAI,CAAC,IAAI;iBACb,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;iBACjC,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;SACpD;QACD,OAAO,uDAAU,CAAC,iDAAiD,CAAC,CAAC;IACvE,CAAC;IAED,UAAU;IACH,QAAQ,CACb,IAAY,EACZ,KAAa,EACb,QAAgB,EAChB,GAAW;QAEX,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CACH,IAAI,CAAC,GAAG,GAAG,GAAG,EACd,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAChD,IAAI,CAAC,OAAO,CACb;aACA,IAAI,CAAC,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;;sEArFU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;ACPM,MAAM,eAAe;IAC1B,MAAM,CAAC,cAAc,CACnB,OAAwB;QAExB,OAAO,IAAI,OAAO,CAAC,CAAO,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC;YAC5C,IAAI,KAAK,GAAG,OAAO,CAAC,KAAe,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,MAAM,KAAK,CAAC,qCAAqC,EAAE;gBACjD,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACP,cAAc,EAAE,kBAAkB;iBACnC;gBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;aACvC,CAAC;iBACC,IAAI,CAAC,CAAC,WAAgB,EAAE,EAAE,EAAE;gBAC3B,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;YACzB,CAAC,CAAC;iBACD,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,GAAG,CAAC,KAAK,EAAE;oBACb,OAAO,CAAC,EAAE,cAAc,EAAE,KAAK,EAAE,CAAC,CAAC;iBACpC;qBAAM;oBACL,OAAO,CAAC,IAAI,CAAC,CAAC;iBACf;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,GAAG,EAAE;oBACP,MAAM,CAAC;wBACL,KAAK,EACH,oEAAoE;qBACvE,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;QACP,CAAC,EAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;ACtCD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;;6FDOV,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,mBAAmB;IAG9B,YACU,cAAgC,EAChC,IAAiB,EACjB,EAAmB;QAFnB,mBAAc,GAAd,cAAc,CAAkB;QAChC,SAAI,GAAJ,IAAI,CAAa;QACjB,OAAE,GAAF,EAAE,CAAiB;QALrB,aAAQ,GAAW,EAAE,CAAC;QACvB,YAAO,GAAW,EAAE,CAAC;IAKzB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,UAAe,EAAE,EAAE,EAAE;YAC1D,IAAI,OAAO,CAAC,IAAI,IAAI,SAAS,EAAE;gBAC7B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU;QACR,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,OAAO;SACR;QAED,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;YAC5B,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE;YAClC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI;YACxC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;SAC1B,CAAC,CAAC;QAEH,gBAAgB;QAChB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;YACpB,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE;YAClC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI;YACxC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;SAC1B,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;;sFAtCU,mBAAmB;mGAAnB,mBAAmB;QCXhC,0EACI;QAAA,yEACI;QAAA,kEAA8B;QAC9B,2EACJ;QAD0B,wLAAqB,8FAA4B,gBAAY,IAAxC;QAA3C,4DACJ;QAAA,4DAAM;QACN,uEAAsD;QAAvB,sIAAS,gBAAY,IAAC;QAAC,4DAAI;QAC9D,4DAAO;;QAHuB,0DAAqB;QAArB,gFAAqB;;6FDQtC,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEVD;AAAA;AAAO,MAAM,IAAI;IAQf,YAAY,QAAa;QAPlB,gBAAW,GAAW,0BAA0B,CAAC;QACjD,WAAM,GAAY,IAAI,CAAC;QAEvB,aAAQ,GAAW,EAAE,CAAC;QACtB,cAAS,GAAY,IAAI,CAAC;QAC1B,WAAM,GAAG,KAAK,CAAC;QAGpB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACxB,IAAI,QAAQ,CAAC,EAAE,IAAI,0BAA0B,EAAE;YAC7C,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC;SAC9B;IACH,CAAC;CACF;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACa;AACd;AACG;AACW;AACH;;;AAEjE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAa;QACxB,WAAW,EAAE,CAAC,6EAAgB,CAAC;QAC/B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,gFAAiB;gBAC5B,WAAW,EAAE,CAAC,6EAAgB,CAAC;gBAC/B,MAAM,EAAE,UAAU;aACnB;SACF;KACF;IACD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,gFAAiB,EAAE;CAC7C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC7BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAEsB;AACX;;;;;;;AAa7D,MAAM,cAAc;IAMzB,YAAY,CAAc,EAAE,CAAS,EAAE,CAAmB;QAHlD,cAAS,GAAW,EAAE,CAAC;QAS/B,kBAAkB;QAClB,cAAS,GAAG,IAAI,wDAAS,CAAC;YACxB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBACzB,yDAAU,CAAC,KAAK;gBAChB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,yDAAU,CAAC,QAAQ;aACpB,CAAC;YACF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC5B,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,yDAAU,CAAC,QAAQ;aACpB,CAAC;SACH,CAAC,CAAC;QAhBD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;IAeD,KAAK;QACH,4BAA4B;QAC5B,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YAC1B,OAAO;SACR;QAED,IAAI,CAAC,WAAW;aACb,QAAQ,CACP,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAC7B,OAAO,CACR;aACA,SAAS,CACR,CAAC,WAAgB,EAAE,EAAE,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC;QACD,0EAA0E;QAC1E,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,KAAK,YAAY,sEAAiB,IAAI,KAAK,EAAE;gBAC/C,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,oBAAoB,EAAE;oBAClD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;iBAClE;qBAAM,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,gBAAgB,EAAE;oBACrD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrC;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACrC;aACF;iBAAM;gBACL,MAAM,KAAK,CAAC;aACb;QACH,CAAC,CACF,CAAC;IACN,CAAC;IAED,YAAY;IACZ,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAED,QAAQ,KAAU,CAAC;;4EA3ER,cAAc;8FAAd,cAAc;QChB3B,oEAAiC;QACjC,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACA;QAAA,yEACI;QAAA,sEAAK;QAAA,oEAAS;QAAA,4DAAM;QACxB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,2EACI;QAD0B,2IAAY,WAAO,IAAC;QAC9C,0EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,2EACI;QAAA,wEACJ;QAAA,4DAAM;QACN,8EAAuE;QAAA,kEAAM;QAAA,4DAAS;QACtF,sEAA4B;QAChC,4DAAO;QACP,8EAA4E;QAAxC,uIAAS,iBAAa,IAAE;QAAgB,8EACjE;QAAA,4DAAS;QACxB,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EAA6B;;QAfX,2DAAuB;QAAvB,oFAAuB;QACQ,0DAAuD;QAAvD,iHAAuD;QAGpD,0DAA+D;QAA/D,yHAA+D;;6FDAtG,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAA4D;;AAKrD,MAAM,aAAa;IACxB,YAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;;0EAD9C,aAAa;6FAAb,aAAa;6FAAb,aAAa;cAHzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;aACtB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACVpC;AAAA;AAAA;AAAA;AAA2C;AACT;;AAK3B,MAAM,mBAAmB;IAC9B,gBAAe,CAAC;IAET,WAAW,CAAC,KAAwB;QACzC,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACrC,kEAAkE;YAClE,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC1D;aAAM;YACL,sDAAsD;YACtD,6DAA6D;YAC7D,OAAO,CAAC,KAAK,CACX,yBAAyB,KAAK,CAAC,MAAM,IAAI,GAAG,aAAa,KAAK,CAAC,KAAK,EAAE,CACvE,CAAC;SACH;QACD,yDAAyD;QACzD,OAAO,uDAAU,CAAC,iDAAiD,CAAC,CAAC;IACvE,CAAC;;sFAhBU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;ACND;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { EmailValidators } from './email.validator';\nimport { mustMatch } from './password.validators';\nimport { AuthService } from '../services/auth.service';\nimport { DataShareService } from '../services/data-share.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  private authService: AuthService;\n  private router: Router;\n  private password1: string = '';\n  isActive: boolean = false;\n\n  constructor(a: AuthService, r: Router, private dataShare: DataShareService) {\n    this.authService = a;\n    this.router = r;\n    this.dataShare.currentMessage.subscribe((message) => {\n      this.toggleModal(); //will receive msg from login component\n    });\n  }\n\n  registerForm = new FormGroup({\n    name: new FormControl('', [Validators.minLength(3), Validators.required]),\n    email: new FormControl(\n      '',\n      [Validators.minLength(3), Validators.required, Validators.email],\n      EmailValidators.shouldBeUnique\n    ),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(3),\n    ]),\n    password2: new FormControl('', [\n      Validators.required,\n      Validators.minLength(3),\n      mustMatch(),\n    ]),\n  });\n\n  register() {\n    //check if the form is valid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.authService\n      .register(\n        this.registerForm.value.name,\n        this.registerForm.value.email,\n        this.registerForm.value.password,\n        'register'\n      )\n      .subscribe((response: any = []) => {\n        this.authService.setUserInfo(response.user);\n        this.router.navigate(['/']);\n      });\n  }\n\n  //register form\n  get regName() {\n    return this.registerForm.get('name');\n  }\n\n  get regEmail() {\n    return this.registerForm.get('email');\n  }\n\n  get regPassword() {\n    return this.registerForm.get('password');\n  }\n\n  get regConfirm() {\n    return this.registerForm.get('password2');\n  }\n\n  onChange(val: any) {\n    this.password1 = (<HTMLInputElement>val.target).value as string;\n    localStorage.setItem('pass', this.password1);\n  }\n\n  public toggleModal() {\n    this.isActive = !this.isActive;\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"register-modal \" [class.hidden]=\"isActive \">\n    <div class=\"register-card \">\n        <h1 class=\"sign-up \">Sign Up</h1>\n        <i class=\"fas fa-times close-modal \" (click)=\"toggleModal() \"></i>\n        <div class=\"divider register-divider \"></div>\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" class=\"my-form \">\n            <div class=\"register-field \" [class.error-outline]=\"regName!.invalid && regName!.touched\">\n                <input formControlName=\"name\" name=\"name \" class=\"custom-input \" type=\"text \" placeholder=\"Username \">\n            </div>\n            <div class=\"register-field \" [class.error-outline]=\"regEmail!.invalid && regEmail!.touched\">\n                <input formControlName=\"email\" name=\"email \" class=\"custom-input \" type=\"text \" placeholder=\"Email \">\n            </div>\n            <div class=\"register-field \" [class.error-outline]=\"regPassword!.invalid && regPassword!.touched\">\n                <input formControlName=\"password\" name=\"password \" (input)=\"onChange($event)\" class=\"custom-input \" type=\"text \" placeholder=\"Password \">\n            </div>\n            <div class=\"register-field \" [class.error-outline]=\"regConfirm!.invalid && regConfirm!.touched\">\n                <input formControlName=\"password2\" name=\"password2\" class=\"custom-input \" type=\"text \" placeholder=\"Re enter your Password \">\n            </div>\n            <button class=\"my-button sign-up-btn \" id=\"js-register \" type=\"submit \">Sign Up</button>\n        </form>\n    </div>\n</div>\n<div class=\"overlay\" [class.hidden]=\"isActive \"></div>","import {\n  AfterViewInit,\n  Component,\n  OnInit,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { SocketioService } from '../services/socketio.service';\nimport { Notification } from '../Models/notification';\nimport { DataShareService } from '../services/data-share.service';\nimport { DataService } from '../services/data.service';\nimport { FileService } from '../services/file.service';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.css'],\n})\nexport class TopbarComponent implements OnInit, AfterViewInit {\n  private authService: AuthService;\n  private router: Router;\n  private io: SocketioService;\n  private dataShareService: DataShareService;\n  private el: any;\n  public notificationList: Notification[] = [];\n  public profile: boolean = true;\n  public notifications: boolean = true;\n  public overlay: boolean = true;\n  public file: any;\n  public exp: string = 'translateX(0px)';\n  public expHeight: string = '197px';\n  public url: string = '';\n  public name: string = '';\n\n  @ViewChild('imagePreview') preview: any;\n  @ViewChild('input') imgInput: any;\n\n  constructor(\n    a: AuthService,\n    r: Router,\n    io: SocketioService,\n    dataShare: DataShareService,\n    private fileService: FileService,\n    private userService: UsersService\n  ) {\n    this.authService = a;\n    this.router = r;\n    this.io = io;\n    this.dataShareService = dataShare;\n  }\n  ngAfterViewInit(): void {\n    this.el = this.preview.nativeElement;\n    this.file = this.imgInput.nativeElement;\n  }\n\n  overlayCheck() {\n    this.profile = true;\n    this.notifications = true;\n    this.overlay = true;\n  }\n\n  notificationsCheck() {\n    this.notifications = !this.notifications;\n    this.overlay = false;\n    if (!this.profile) {\n      this.profile = true;\n    }\n  }\n\n  profileCheck() {\n    this.profile = !this.profile;\n    this.overlay = false;\n    if (!this.notifications) {\n      this.notifications = true;\n    }\n  }\n\n  logout() {\n    this.io.disconnectSocket();\n    this.authService.logout('logout').subscribe((response: any = []) => {\n      console.log(response);\n    });\n    this.router.navigateByUrl('/login');\n  }\n\n  appendNotification(data: any) {\n    let notification = new Notification();\n    notification.date = Date.now().toString();\n    notification.name = data.senderName;\n    //notification.id = data.id;\n    this.notificationList.push(notification);\n  }\n\n  changeAvatar() {\n    this.exp = 'translateX(-297px)';\n    this.expHeight = '400px';\n  }\n\n  slide() {\n    this.exp = 'translateX(0px)';\n    this.expHeight = '197px';\n    setTimeout(() => {\n      this.el.style.backgroundImage = 'url(' + this.url + ')';\n    }, 200);\n  }\n\n  previewAvatar() {\n    var reader = new FileReader();\n    let element = this.el;\n    reader.onload = function (e: any) {\n      element.style.backgroundImage = 'url(' + e.target.result + ')';\n    };\n    reader.readAsDataURL(this.file.files[0]);\n  }\n\n  upload() {\n    if (this.file && this.file.files[0]) {\n      const fd = new FormData();\n      fd.append('image', this.file.files[0]);\n      this.fileService\n        .postAvatar('avatar', fd)\n        .subscribe((response: any = []) => {\n          this.url = response.path;\n          this.slide();\n        });\n    }\n  }\n\n  ngOnInit(): void {\n    this.dataShareService.remote.subscribe((data: any) => {\n      if (data.sender == 'default') return;\n      this.appendNotification(data);\n    });\n    this.userService\n      .getUser('users/' + this.authService.getUserInfo().id)\n      .subscribe((response: any = []) => {\n        this.name = response.user.name;\n        this.url = response.user.avatar;\n      });\n  }\n}\n","<div class=\"overlay\" (click)=\"overlayCheck()\" [class.hidden]=\"overlay\"></div>\n<div class=\"top-navbar\">\n    <div class=\"options\">\n        <div class=\"messenger-wrapper\">\n            <i class=\"fab fa-facebook-messenger\"></i>\n        </div>\n    </div>\n    <div class=\"options\">\n        <div class=\"home-wrapper active\">\n            <i class=\"fas fa-home active\"></i>\n        </div>\n        <div class=\"friends-wrapper\">\n            <i class=\"fas fa-user-friends\"></i>\n        </div>\n    </div>\n    <div class=\"options\">\n        <div class=\"dropdown\">\n            <div class=\"bell-wrapper ts-notifications\" (click)='notificationsCheck()' [class.active-option]=\"!notifications\">\n                <i class=\"fas fa-bell ts-profile\"></i>\n            </div>\n            <div class=\"profile-dropdown  \" [class.hidden]=\"notifications\">\n                <h1 style=\"font-size: 25px; margin-bottom:10px; margin-top:5px; \">Notifications</h1>\n                <div class=\"divider div-profile\"></div>\n                <div class=\"inner-wrapper\">\n                    <div class=\"profile-item item-margin\" *ngFor=\"let notification of notificationList\">\n                        <img src=\"http://localhost:5000/routes/uploads/228463.jpg\" class=\" avatar \" style=\"margin-top: 0px;\">\n                        <div class=\"details \">\n                            <div class=\"message\">{{notification.name}} send a message!</div>\n                            <div style=\"margin-top: -10px;\"><small>Click to see.</small></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"dropdown\">\n            <div class=\"profile-wrapper ts-profile\" (click)=\"profileCheck()\" [class.active-option]=\"!profile\">\n                <i class=\"fas fa-sort-down ts-profile\"></i>\n            </div>\n            <div class=\"profile-dropdown hidden js-drop\" [style.maxHeight]=\"expHeight\" [class.hidden]=\"profile\">\n                <div class=\"slide2\" [style.transform]=\"exp\">\n                    <div class=\"profile-item js-avatar\" (click)=\"changeAvatar()\">\n                        <img [src]=\"url\" class=\"user-avatar\">\n                        <div class=\"details\">\n                            <h1 style=\"font-size: 25px; margin-bottom:-8px;\">{{name}}</h1>\n                            <small>Change Avatar</small>\n                        </div>\n                    </div>\n                    <div class=\"divider\"></div>\n                    <div class=\"log-out\" (click)=\"logout()\">\n                        <i class=\"fas fa-sign-out-alt\"></i>\n                        <h1 style=\"font-size: 25px;\">Log Out</h1>\n                    </div>\n                </div>\n                <div class=\"slide1\" [style.transform]=\"exp\">\n                    <i class=\"fas fa-times ts-close\" (click)=\"slide()\"></i>\n                    <h1 style=\"font-size: 20px; margin-bottom:2px; margin-top:8px;\">Choose a photo</h1>\n                    <div class=\"container\">\n                        <div class=\"avatar-upload\">\n                            <form class=\"avatar-edit\">\n                                <input name=\"file\" (change)=\"previewAvatar()\" #input type='file' id=\"imageUpload\" accept=\".png, .jpg, .jpeg\" />\n                                <label for=\"imageUpload\"></label>\n                            </form>\n                            <div class=\"avatar-preview\">\n                                <div #imagePreview [style.backgroundImage]=\"'url('+url+')'\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"divider\"></div>\n                    <div class=\"log-out ts-up\" (click)=\"upload()\">\n                        <i class=\"fas fa-upload\"></i>\n                        <h1 style=\"font-size: 25px;\">Upload</h1>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService extends DataService {\n  constructor(http: HttpClient, er: ErrorHandlerService) {\n    super(http, er, 'http://localhost:5000/');\n  }\n}\n","export class Notification {\r\n  public name: string = '';\r\n  public id: number = 0;\r\n  public date: string = '';\r\n}\r\n","import { Route } from '@angular/compiler/src/core';\nimport { AfterViewInit, ComponentFactoryResolver, Input } from '@angular/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ChatAreaComponent } from '../chat-area/chat-area.component';\nimport { ChatDirective } from '../chat-area/chat.directive';\nimport { CommentComponent } from '../comment/comment.component';\nimport { AuthService } from '../services/auth.service';\nimport { DataShareService } from '../services/data-share.service';\nimport { SocketioService } from '../services/socketio.service';\nimport { ConversationDirective } from './conversation.directive';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit, AfterViewInit {\n  public infoName: string = '';\n  public info: string = '';\n  public el: any;\n  public url: any;\n\n  @ViewChild('chat') chatArea: any;\n\n  constructor(\n    private socketService: SocketioService,\n    private dataShare: DataShareService,\n    private r: Router\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.el = this.chatArea.nativeElement;\n    this.dataShare.local.subscribe((d: any) => {\n      this.smoothScrolling();\n    });\n  }\n\n  ngOnInit(): void {\n    this.socketService.setupSocketConnection();\n    this.dataShare.message.subscribe((message: any = []) => {\n      if (message.name != 'default') {\n        this.infoName = message.name;\n        this.url = message.url;\n        this.changeStatus(message.status);\n        this.smoothScrolling();\n      }\n    });\n    this.dataShare.status.subscribe((id) => {\n      if (id == '') return;\n      if (this.info == 'Active now.') {\n        this.info = 'Offline.';\n      } else {\n        this.info = 'Active now.';\n      }\n    });\n  }\n\n  //scroll to bottom\n  smoothScrolling() {\n    setTimeout(() => {\n      this.el.scrollTop = this.el.scrollHeight - this.el.clientHeight;\n    }, 300);\n  }\n\n  changeStatus(status: boolean) {\n    if (status) {\n      this.info = 'Active now.';\n    } else {\n      this.info = 'Offline.';\n    }\n  }\n}\n","<chat-rooms></chat-rooms>\r\n<div class=\"content-wrapper \">\r\n    <div class=\"chat-info \">\r\n        <div class=\"avatar-holder \">\r\n            <img [src]=\"url\" class=\"user-avatar small\">\r\n        </div>\r\n        <div class=\"user-details \">\r\n            <h1>{{infoName}}</h1>\r\n            <small>{{info}}</small>\r\n        </div>\r\n    </div>\r\n    <div id=\"ts-chat\" class=\"chat-area\" #chat>\r\n        <router-outlet name='chatArea'></router-outlet>\r\n    </div>\r\n    <input-field></input-field>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  SOCKET_ENDPOINT: 'http://localhost:5000',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  private readonly url: string;\n  private http: HttpClient;\n  private errorHandler: ErrorHandlerService;\n  private options: any;\n\n  constructor(\n    http: HttpClient,\n    er: ErrorHandlerService,\n    @Inject(String) url: string\n  ) {\n    this.http = http;\n    this.errorHandler = er;\n    this.url = url;\n\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    this.options = { headers: headers, withCredentials: true };\n  }\n\n  //get all but one\n  getAll(uri: string): Observable<any> {\n    return this.http\n      .get(this.url + uri, this.options)\n      .pipe(catchError(this.errorHandler.handleError));\n  }\n\n  getLastComment(uri: string): Observable<any> {\n    return this.http\n      .get(this.url + uri, this.options)\n      .pipe(catchError(this.errorHandler.handleError));\n  }\n\n  getComments(uri: string, roomData: any): Observable<any> {\n    return this.http\n      .post(this.url + uri, roomData, this.options)\n      .pipe(catchError(this.errorHandler.handleError));\n  }\n\n  //get spesific user\n  getUser(uri: string): Observable<any> {\n    return this.http\n      .get(this.url + uri, this.options)\n      .pipe(catchError(this.errorHandler.handleError));\n  }\n\n  //post avatar\n  postAvatar(uri: string, file: any): Observable<any> {\n    return this.http\n      .post(this.url + uri, file, this.options)\n      .pipe(catchError(this.errorHandler.handleError));\n  }\n\n  //get avatar\n  getAvatar(uri: string): Observable<any> {\n    return this.http\n      .get(this.url + uri, this.options)\n      .pipe(catchError(this.errorHandler.handleError));\n  }\n}\n","import { ViewContainerRef } from '@angular/core';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appConversation]',\n})\nexport class ConversationDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataShareService {\n  //emit to the subscribers\n\n  constructor() {}\n  private modalSwitch = new BehaviorSubject('default');\n  currentMessage = this.modalSwitch.asObservable();\n  public registerModal(hidden: string) {\n    this.modalSwitch.next(hidden);\n  }\n\n  //change current user info header\n  private changeName = new BehaviorSubject<Object>({\n    name: 'default',\n    room: 0,\n  });\n  message = this.changeName.asObservable();\n  public notifyChange(data: any) {\n    if (data.name == 'default') return;\n    this.changeName.next(data);\n  }\n\n  //pass comment data to chatArea for new comments!!!\n  private commentData = new BehaviorSubject<Object>({\n    sender: 'default',\n  });\n  remote = this.commentData.asObservable();\n  public sendRemote(d: any) {\n    this.commentData.next(d);\n  }\n\n  //pass comment data to chatArea for new comments!!!\n  private localData = new BehaviorSubject<Object>({\n    sender: 'default',\n  });\n  local = this.localData.asObservable();\n  public sendlocal(d: any) {\n    this.localData.next(d);\n  }\n\n  //potentially some one mede a new account so we need to render them on the list\n  private refreshRooms = new BehaviorSubject('');\n  refresh = this.refreshRooms.asObservable();\n  public refreshUsers(id: string) {\n    if (id == '') return;\n    this.refreshRooms.next(id);\n  }\n\n  //update status\n  private userStatus = new BehaviorSubject('');\n  status = this.userStatus.asObservable();\n  public updateStatus(id: string) {\n    if (id == '') return;\n    this.userStatus.next(id);\n  }\n\n  //fetchRooms\n  private userIds = new BehaviorSubject<any>({});\n  userIdsMessage = this.userStatus.asObservable();\n  public sendIds(ids: any) {\n    if (ids == '') return;\n    this.userIds.next(ids);\n  }\n\n  //send new url to chat room\n  private updateUrl = new BehaviorSubject<String>('');\n  changeUrl = this.commentData.asObservable();\n  public sendUrl(url: any) {\n    this.updateUrl.next(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuardService implements CanActivate {\n  private authService: any;\n  private router: any;\n\n  constructor(a: AuthService, r: Router) {\n    this.authService = a;\n    this.router = r;\n  }\n\n  //ensure if a route can be activated\n  canActivate() {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    }\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { io, Socket } from 'socket.io-client';\nimport { AuthService } from './auth.service';\nimport { DataShareService } from './data-share.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocketioService {\n  private socket: any;\n  constructor(\n    private auth: AuthService,\n    private forwardMessage: DataShareService\n  ) {}\n\n  setupSocketConnection() {\n    //init , connect and create aprivate room for each user\n    this.socket = io('http://localhost:5000');\n    this.socket.emit('joinRoom', this.auth.getUserInfo().id);\n\n    //some one joined , possibly a new account\n    this.socket.on('joined', (data: any) => {\n      if (data.id != this.auth.getUserInfo().id) {\n        this.forwardMessage.refreshUsers(data.id);\n        this.forwardMessage.updateStatus(data.id);\n      }\n    });\n\n    //listen for messages\n    this.socket.on('message', (data: any) => {\n      this.forwardMessage.sendRemote(data.message);\n    });\n\n    //keep an eye out for anyone who might disconnect\n    this.socket.on('left', (data: any) => {\n      this.forwardMessage.updateStatus(data.id);\n    });\n  }\n\n  //send messages\n  messageSubmit(message: any) {\n    this.socket.emit('message', message);\n  }\n\n  //disconnect on logout\n  disconnectSocket() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-status',\n  templateUrl: './status.component.html',\n  styleUrls: ['./status.component.css']\n})\nexport class StatusComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>status works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { SocketioService } from './services/socketio.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'Angular';\n  private authService: AuthService;\n\n  constructor(a: AuthService) {\n    this.authService = a;\n  }\n\n  ngOnInit() {}\n\n  public navBar() {\n    return this.authService.isAuthenticated();\n  }\n}\n","<app-topbar *ngIf=\"navBar()\"></app-topbar>\r\n\r\n<router-outlet></router-outlet>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { ErrorHandlerService } from './error-handler.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommentsService extends DataService {\r\n  constructor(http: HttpClient, er: ErrorHandlerService) {\r\n    super(http, er, 'http://localhost:5000/');\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CommentFactoryService } from '../services/comment-factory.service';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css'],\n})\nexport class CommentComponent implements OnInit {\n  constructor(comentFactory: CommentFactoryService) {}\n\n  @Input() data: any;\n  @Input() foreign: boolean = false;\n  @Input() isFirst: boolean = true;\n  @Input() url: string = '';\n  shouldBeRendered: boolean = true;\n\n  ngOnInit(): void {\n    if (\n      this.data.text == '' ||\n      this.data.senderName == '' ||\n      this.data.senderName == 'default' ||\n      this.data.sender == 'default'\n    ) {\n      this.shouldBeRendered = false;\n    }\n  }\n}\n","<div *ngIf=\"shouldBeRendered\">\n    <!----------not mine------------>\n    <div class=\"comment-wrapper not-my-comment \" *ngIf=\"foreign\">\n        <div class=\"comment \">\n            <div class=\"comment-user \" *ngIf=\"isFirst\">\n                <small>{{data.senderName}}</small>\n            </div>\n            <div class=\"inner-wrapper \">\n                <img [src]=\"url\" *ngIf=\"isFirst\" class=\"avatar \">\n                <div class=\"blank-avatar\" *ngIf=\"!isFirst\"></div>\n                <div class=\"comment-body comment-text \">\n                    {{data.text}}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!------------mine------------->\n    <div class=\"comment-wrapper my-comment \" *ngIf=\"!foreign\">\n        <div class=\"comment \">\n            <div class=\"inner-wrapper \">\n                <div class=\"comment-body comment-text \">\n                    {{data.text}}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","export class Room {\r\n  private commentsList: any = Array<Object>();\r\n  private senderId: string = '';\r\n  private lastComment: string = '';\r\n\r\n  constructor(list: any, id: any) {\r\n    this.commentsList = list;\r\n    this.senderId = id;\r\n  }\r\n\r\n  public addComment(comment: any) {\r\n    this.commentsList.push(comment);\r\n  }\r\n\r\n  public getSender() {\r\n    return this.senderId;\r\n  }\r\n\r\n  public getComments() {\r\n    return this.commentsList;\r\n  }\r\n}\r\n","import {\n  Component,\n  ComponentFactoryResolver,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { CommentComponent } from '../comment/comment.component';\nimport { Room } from '../Models/room';\nimport { AuthService } from '../services/auth.service';\nimport { CommentsService } from '../services/comments.service';\nimport { DataShareService } from '../services/data-share.service';\nimport { FileService } from '../services/file.service';\nimport { UsersService } from '../services/users.service';\nimport { ChatDirective } from './chat.directive';\n\n@Component({\n  selector: 'chat-area',\n  templateUrl: './chat-area.component.html',\n  styleUrls: ['./chat-area.component.css'],\n})\nexport class ChatAreaComponent implements OnInit {\n  @ViewChild(ChatDirective, { static: true })\n  appChat!: ChatDirective;\n\n  private rooms: any = Array<Room>();\n  private vc!: ViewContainerRef;\n  private activeRoom: any;\n  private track = 0;\n  private public = '60539a6801ac562984ae4f93';\n  private uid = this.auth.getUserInfo().id;\n  private avatar: string = '';\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private fetchData: DataShareService,\n    private commentsService: CommentsService,\n    private auth: AuthService,\n    private fileService: FileService\n  ) {}\n\n  ngOnInit() {\n    this.fetchData.message.subscribe((data: any) => {\n      if (data.name == 'default') return;\n      if (data.id == this.activeRoom) return;\n      this.vc = this.appChat.viewContainerRef;\n      this.vc.clear();\n      this.activeRoom = data.id;\n      this.fetchUrl();\n    });\n\n    // local append\n    this.fetchData.local.subscribe((data: any) => {\n      this.commentSectionInit(data);\n      this.rooms.forEach((room: any) => {\n        if (room.getSender() == this.activeRoom) room.addComment(data);\n      });\n    });\n\n    //remote append\n    this.fetchData.remote.subscribe((data: any) => {\n      if (this.activeRoom == data.sender) {\n        this.commentSectionInit(data);\n      }\n      if (data.receiver == this.public) {\n        this.commentSectionInit(data);\n      }\n      this.rooms.forEach((room: any) => {\n        if (room.getSender() == data.sender) room.addComment(data);\n      });\n    });\n  }\n\n  renderer(comments: any) {\n    this.track = 0;\n    comments.forEach((comment: any) => {\n      this.commentSectionInit(comment);\n    });\n  }\n\n  //create a comment instance for each comment\n  commentSectionInit(data: any) {\n    if (!data) return;\n    this.vc = this.appChat.viewContainerRef;\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      CommentComponent\n    );\n    const componentRef = this.vc.createComponent<CommentComponent>(\n      componentFactory\n    );\n    //private room\n    if (data.receiver == this.uid) {\n      this.track++;\n      if (this.track > 1) {\n        (<CommentComponent>componentRef.instance).isFirst = false;\n      }\n      (<CommentComponent>componentRef.instance).foreign = true;\n      //public room\n    } else if (data.receiver == this.public && data.sender != this.uid) {\n      (<CommentComponent>componentRef.instance).foreign = true;\n    } else {\n      this.track = 0;\n    }\n    (<CommentComponent>componentRef.instance).data = data;\n    (<CommentComponent>componentRef.instance).url = this.avatar;\n  }\n\n  getRoom() {\n    for (let room of this.rooms) {\n      if (room.getSender() == this.activeRoom) {\n        this.renderer(room.getComments());\n        return;\n      }\n    }\n    this.fetchFromServer();\n  }\n\n  fetchFromServer() {\n    this.commentsService\n      .getComments('room', {\n        receiver: this.activeRoom,\n        sender: this.auth.getUserInfo().id,\n      })\n      .subscribe((response: any = []) => {\n        let room = new Room(response.comments, this.activeRoom);\n        this.rooms.push(room);\n        this.renderer(response.comments);\n      });\n  }\n\n  fetchUrl() {\n    this.fileService\n      .getAvatar('avatar/' + this.activeRoom)\n      .subscribe((response: any = []) => {\n        this.avatar = response.url;\n        this.getRoom();\n      });\n  }\n}\n","<ng-module appChat></ng-module>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { AuthGuardService as AuthGuard } from './services/auth-guard.service';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { HomeComponent } from './home/home.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { JwtHelperService, JwtModule } from '@auth0/angular-jwt';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DataShareService } from './services/data-share.service';\nimport { ChatAreaComponent } from './chat-area/chat-area.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { ChatDirective } from './chat-area/chat.directive';\nimport { ConversationDirective } from './home/conversation.directive';\nimport { SocketioService } from './services/socketio.service';\nimport { ChatRoomsComponent } from './chat-rooms/chat-rooms.component';\nimport { DataService } from './services/data.service';\nimport { UsersService } from './services/users.service';\nimport { InputFieldComponent } from './input-field/input-field.component';\nimport { CommentsService } from './services/comments.service';\nimport { StatusComponent } from './status/status.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    NotFoundComponent,\n    HomeComponent,\n    TopbarComponent,\n    RegisterComponent,\n    ChatAreaComponent,\n    CommentComponent,\n    ChatDirective,\n    ConversationDirective,\n    ChatRoomsComponent,\n    InputFieldComponent,\n    StatusComponent,\n  ],\n  imports: [\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    JwtModule,\n    FormsModule,\n  ],\n  providers: [\n    AuthGuard,\n    CookieService,\n    JwtHelperService,\n    ErrorHandlerService,\n    RegisterComponent,\n    DataShareService,\n    SocketioService,\n    DataService,\n    UsersService,\n    CommentsService,\n  ],\n  bootstrap: [AppComponent],\n  exports: [RouterModule],\n})\nexport class AppModule {}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataShareService } from '../services/data-share.service';\nimport { UsersService } from '../services/users.service';\nimport { User } from './user';\n\n@Component({\n  selector: 'chat-rooms',\n  templateUrl: './chat-rooms.component.html',\n  styleUrls: ['./chat-rooms.component.css'],\n})\nexport class ChatRoomsComponent implements OnInit, AfterViewInit {\n  private users: User[] = [];\n  public userName: string = '';\n  private activeRoom: number = 0;\n  constructor(\n    private r: Router,\n    private userService: UsersService,\n    private dataShare: DataShareService\n  ) {}\n\n  ngAfterViewInit(): void {}\n\n  ngOnInit(): void {\n    this.userService.getAll('users').subscribe((response: any = []) => {\n      for (const user of response.users) {\n        let newUser = new User(user);\n        this.users.push(newUser);\n      }\n      this.changeRoom(0);\n    });\n    this.dataShare.refresh.subscribe((id) => {\n      if (id == '') return;\n      setTimeout(() => {\n        this.addUser(id);\n      }, 2500);\n    });\n    this.dataShare.status.subscribe((id) => {\n      this.updateStatus(id);\n    });\n  }\n\n  get getUsers() {\n    return this.users;\n  }\n\n  addUser(id: string) {\n    for (const user of this.users) {\n      if (user.details.id == id) return;\n    }\n    this.userService.getUser('users/' + id).subscribe((response: any = []) => {\n      this.users.push(new User(response.user));\n    });\n  }\n\n  changeRoom(index: any) {\n    if (index < this.users.length) {\n      this.dataShare.notifyChange({\n        name: this.users[index].details.name,\n        id: this.users[index].details.id,\n        status: this.users[index].status,\n        url: this.users[index].details.avatar,\n      });\n      this.r.navigate([\n        { outlets: { chatArea: ['chat', this.users[index].details.id] } },\n      ]);\n      this.users[this.activeRoom].active = false;\n      this.users[index].active = true;\n      this.activeRoom = index;\n    }\n  }\n\n  updateStatus(id: string) {\n    if (id == '') return;\n    this.users.forEach((user: User) => {\n      if (user.details.id == id) {\n        user.status = !user.status;\n      }\n    });\n  }\n\n  searchUser() {\n    for (const user of this.users) {\n      if (\n        !(user.details.name as string)\n          .trim()\n          .toLowerCase()\n          .startsWith((this.userName as string).trim().toLowerCase())\n      ) {\n        user.isVisible = false;\n      } else {\n        user.isVisible = true;\n      }\n    }\n  }\n}\n","<div class=\"sidenav \">\n    <div class=\"side-top \">\n        <div class=\"chat-header \">\n            <span>\n                <b>Chats</b>\n            </span>\n        </div>\n        <form class=\"search-chat search-field \">\n            <i class=\"fas fa-search \"></i>\n            <input name=\"userName\" [(ngModel)]=\"userName\" (keyup)=\"searchUser() \" class=\"my-input \" placeholder=\"Search users \">\n        </form>\n    </div>\n    <ul class=\"user-list \">\n        <li class=\"ts-user \" *ngFor=\"let user of getUsers;let i=index \" (click)=\"changeRoom(i) \">\n            <div class=\"inner-content\" *ngIf=\"user.isVisible\" [class.active]=\"user.active\">\n                <img [src]=\"user.details.avatar\" class=\"user-avatar \">\n                <div class=\"last-msg \">\n                    <h1 style=\"margin-bottom:0px; font-size: 15px; \">{{user.details.name}}</h1>\n                    <small class=\"visible \">\n                        {{user.lastComment}}\n                    </small>\n                </div>\n                <div class=\"status \" [class.alive]=\"user.status \">\n                    <i class=\"fas fa-circle \"></i>\n                </div>\n            </div>\n        </li>\n    </ul>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentFactoryService {\n\n  constructor() { }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileService extends DataService {\n  constructor(http: HttpClient, er: ErrorHandlerService) {\n    super(http, er, 'http://localhost:5000/');\n  }\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function mustMatch(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    let confirmPassword = control.value as string;\r\n    let password = localStorage.getItem('pass') as string;\r\n\r\n    if (confirmPassword != password) {\r\n      return { mustMatch: false };\r\n    }\r\n    return null;\r\n  };\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { catchError } from 'rxjs/operators';\nimport jwt_decode from 'jwt-decode';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private http: HttpClient;\n  private errorHandler: ErrorHandlerService;\n  private readonly URL = 'http://localhost:5000/';\n  private options: any;\n  private jwtHelper: any;\n\n  constructor(http: HttpClient, er: ErrorHandlerService) {\n    this.http = http;\n    this.errorHandler = er;\n    this.jwtHelper = new JwtHelperService();\n\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    this.options = { headers: headers, withCredentials: true };\n  }\n\n  //main authentication routine\n  public isAuthenticated(): Boolean {\n    let token = localStorage.getItem('token') as string;\n    if (!token) {\n      return false;\n    }\n    if (this.jwtHelper.isTokenExpired(token)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  //get info from token\n  public getUserInfo() {\n    let token = localStorage.getItem('token') as string;\n    let dec: any = jwt_decode(token);\n    return { name: dec.name, email: dec.email, id: dec.id, avatar: dec.avatar };\n  }\n\n  //store user info into the local storage\n  public setUserInfo(token: any) {\n    localStorage.setItem('token', JSON.stringify(token));\n  }\n\n  //remove user on logout\n  public removeUserInfo() {\n    localStorage.clear();\n  }\n\n  //call the server to validate\n  public validate(\n    email: String,\n    password: String,\n    uri: String\n  ): Observable<any> {\n    return this.http.post(\n      this.URL + uri,\n      { email: email, password: password },\n      this.options\n    );\n  }\n\n  //logout\n  public logout(uri: String): Observable<any> {\n    if (this.isAuthenticated()) {\n      this.removeUserInfo();\n      return this.http\n        .get(this.URL + uri, this.options)\n        .pipe(catchError(this.errorHandler.handleError));\n    }\n    return throwError('Something bad happened; please try again later.');\n  }\n\n  //register\n  public register(\n    name: String,\n    email: String,\n    password: String,\n    uri: String\n  ): Observable<any> {\n    return this.http\n      .post(\n        this.URL + uri,\n        { name: name, email: email, password: password },\n        this.options\n      )\n      .pipe(catchError(this.errorHandler.handleError));\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport class EmailValidators {\r\n  static shouldBeUnique(\r\n    control: AbstractControl\r\n  ): Promise<ValidationErrors | null> {\r\n    return new Promise(async (resolve, reject) => {\r\n      let email = control.value as string;\r\n      console.log('reached');\r\n      await fetch('http://localhost:5000/validateEmail', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: email }),\r\n      })\r\n        .then((response: any = []) => {\r\n          return response.json();\r\n        })\r\n        .then((res: any = []) => {\r\n          console.log(res);\r\n          if (res.found) {\r\n            resolve({ shouldBeUnique: false });\r\n          } else {\r\n            resolve(null);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err) {\r\n            reject({\r\n              error:\r\n                'Could not resolve request , most likely the server is out of reach',\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { DataShareService } from '../services/data-share.service';\nimport { SocketioService } from '../services/socketio.service';\n\n@Component({\n  selector: 'input-field',\n  templateUrl: './input-field.component.html',\n  styleUrls: ['./input-field.component.css'],\n})\nexport class InputFieldComponent implements OnInit {\n  private receiver: string = '';\n  public comment: string = '';\n  constructor(\n    private forwardMessage: DataShareService,\n    private auth: AuthService,\n    private io: SocketioService\n  ) {}\n\n  ngOnInit(): void {\n    this.forwardMessage.message.subscribe((message: any = []) => {\n      if (message.name != 'default') {\n        this.receiver = message.id;\n      }\n    });\n  }\n  newComment() {\n    if (this.comment.trim().length < 2) {\n      return;\n    }\n\n    //send to chat area\n    this.forwardMessage.sendlocal({\n      sender: this.auth.getUserInfo().id,\n      senderName: this.auth.getUserInfo().name,\n      receiver: this.receiver,\n      text: this.comment.trim(),\n    });\n\n    //emit to server\n    this.io.messageSubmit({\n      sender: this.auth.getUserInfo().id,\n      senderName: this.auth.getUserInfo().name,\n      receiver: this.receiver,\n      text: this.comment.trim(),\n    });\n\n    this.comment = '';\n  }\n}\n","<form class=\"input-field \">\n    <div class=\"search-chat send-message \">\n        <i class=\"fas fa-search \"></i>\n        <input name=\"comment\" [(ngModel)]=\"comment\" type=\"text\" (keyup.enter)=\"newComment()\" class=\"my-input-send ts-send \" placeholder=\"write something... \">\n    </div>\n    <i class=\"fas fa-paper-plane \" (click)=\"newComment()\"></i>\n</form>","export class User {\r\n  public lastComment: string = 'Click to start chatting.';\r\n  public status: boolean = true;\r\n  public details: any;\r\n  public lastSeen: string = '';\r\n  public isVisible: boolean = true;\r\n  public active = false;\r\n\r\n  constructor(userData: any) {\r\n    this.details = userData;\r\n    if (userData.id == '60539a6801ac562984ae4f93') {\r\n      this.status == true;\r\n    } else {\r\n      this.status = userData.alive;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatAreaComponent } from './chat-area/chat-area.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { AuthGuardService } from './services/auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: 'chat/:id',\n        component: ChatAreaComponent,\n        canActivate: [AuthGuardService],\n        outlet: 'chatArea',\n      },\n    ],\n  },\n  { path: 'login', component: LoginComponent },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { ThrowStmt } from '@angular/compiler';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RegisterComponent } from '../register/register.component';\nimport { AuthService } from '../services/auth.service';\nimport { DataShareService } from '../services/data-share.service';\nimport { EmailValidators } from '../register/email.validator';\nimport { mustMatch } from '../register/password.validators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  private authService: AuthService;\n  private router: Router;\n  private password1: string = '';\n  private dataShare: DataShareService;\n\n  constructor(a: AuthService, r: Router, d: DataShareService) {\n    this.authService = a;\n    this.router = r;\n    this.dataShare = d;\n  }\n\n  //login validators\n  loginForm = new FormGroup({\n    email: new FormControl('', [\n      Validators.email,\n      Validators.minLength(3),\n      Validators.required,\n    ]),\n    password: new FormControl('', [\n      Validators.minLength(3),\n      Validators.required,\n    ]),\n  });\n\n  login() {\n    //check if the form is valid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.authService\n      .validate(\n        this.loginForm.value.email,\n        this.loginForm.value.password,\n        'login'\n      )\n      .subscribe(\n        (response: any = []) => {\n          console.log(response);\n          this.authService.setUserInfo(response.user);\n          localStorage.removeItem('pass');\n          this.router.navigate(['']);\n        },\n        //handle the error locally so we can display detailed messages to the user\n        (error: any) => {\n          if (error instanceof HttpErrorResponse && error) {\n            if (error.error.message[0] == 'Incorrect password') {\n              console.log(error.error.message[0]);\n              this.loginForm.controls['password'].setErrors({ invalid: true });\n            } else if (error.error.message[0] == 'Not Registered') {\n              console.log(error.error.message[0]);\n            } else {\n              console.log(error.error.message[0]);\n            }\n          } else {\n            throw error;\n          }\n        }\n      );\n  }\n\n  //login form\n  get name() {\n    return this.loginForm.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  toggleModal() {\n    this.dataShare.registerModal('changed');\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"login-overlay\"></div>\n<div class=\"container-fluid dark-color position\">\n    <div class=\"login-wrapper\">\n        <div class=\"avatar-wrapper\">\n            <div class=\"login-avatar-holder\">\n                <img class=\"img\" src=\"assets/38422.jpg\">\n                <div class=\"name-tab\">\n                    <div>SuperUser</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"login-card\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                <div class=\"input-wrapper-email\" [class.input-outline]=\"name!.touched && !name!.invalid\" [class.error-outline]=\"name!.invalid && name!.touched\">\n                    <input formControlName=\"email\" name=\"email\" class=\"custom-input\" type=\"text\" placeholder=\"Email\">\n                </div>\n                <div class=\"input-wrapper-password\" [class.input-outline]=\"password!.touched && !password!.invalid\" [class.error-outline]=\"password!.invalid && password!.touched\">\n                    <input formControlName=\"password\" name=\"password\" class=\"custom-input\" type=\"text\" placeholder=\" Password \">\n                </div>\n                <button name=\"login \" class=\"my-button \" id=\"js-login \" type=\"submit \">Log In</button>\n                <div class=\"divider \"></div>\n            </form>\n            <button class=\"my-register-button \" (click)=\"toggleModal() \" id=\"js-modal \">Create New\n                Account</button>\n        </div>\n    </div>\n</div>\n<app-register></app-register>","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appChat]',\n})\nexport class ChatDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService {\n  constructor() {}\n\n  public handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` + `body was: ${error.error}`\n      );\n    }\n    // Return an observable with a user-facing error message.\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}