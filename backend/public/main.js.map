{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/Models/details.ts","./src/app/topbar/topbar.component.ts","./src/app/topbar/topbar.component.html","./src/app/services/users.service.ts","./src/app/demo/demo.component.ts","./src/app/demo/demo.component.html","./src/app/Models/notification.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/commentFactory/sentComment.ts","./src/environments/environment.ts","./src/app/services/data.service.ts","./src/app/commentFactory/receivedComment.ts","./src/app/home/conversation.directive.ts","./src/app/services/data-share.service.ts","./src/app/commentFactory/comment.ts","./src/app/services/auth-guard.service.ts","./src/app/services/socketio.service.ts","./src/app/commentFactory/factory.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/demo.service.ts","./src/app/services/comments.service.ts","./src/app/comment/comment.component.ts","./src/app/comment/comment.component.html","./src/app/Models/room.ts","./src/app/chat-area/chat-area.component.ts","./src/app/chat-area/chat-area.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/info/info.component.ts","./src/app/info/info.component.html","./src/app/app.module.ts","./src/app/chat-rooms/chat-rooms.component.ts","./src/app/chat-rooms/chat-rooms.component.html","./src/app/services/file.service.ts","./src/app/register/password.validators.ts","./src/app/services/auth.service.ts","./src/app/Models/user.ts","./src/app/register/email.validator.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/room-info/room-info.component.ts","./src/app/room-info/room-info.component.html","./src/app/input-field/input-field.component.ts","./src/app/input-field/input-field.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/pop-up/pop-up.component.ts","./src/app/pop-up/pop-up.component.html","./src/app/chat-area/chat.directive.ts","./src/main.ts","./src/app/services/error-handler.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { EmailValidators } from './email.validator';\nimport { mustMatch } from './password.validators';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent {\n  public password: string = '';\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  registerForm = new FormGroup({\n    name: new FormControl('', [Validators.minLength(3), Validators.required]),\n    email: new FormControl(\n      '',\n      [Validators.minLength(3), Validators.required, Validators.email],\n      EmailValidators.shouldBeUnique\n    ),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(3),\n    ]),\n    password2: new FormControl('', [\n      Validators.required,\n      Validators.minLength(3),\n      mustMatch(),\n    ]),\n  });\n\n  register() {\n    //check if the form is valid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.authService\n      .register(\n        this.registerForm.value.name,\n        this.registerForm.value.email,\n        this.registerForm.value.password,\n        'register'\n      )\n      .subscribe((response) => {\n        this.closeModal();\n        this.router.navigate(['']);\n      });\n  }\n\n  //register form\n  get regName() {\n    return this.registerForm.get('name');\n  }\n\n  get regEmail() {\n    return this.registerForm.get('email');\n  }\n\n  get regPassword() {\n    return this.registerForm.get('password');\n  }\n\n  get regConfirm() {\n    return this.registerForm.get('password2');\n  }\n\n  private closeModal() {\n    const btn = document.querySelector('#closereg') as HTMLElement;\n    btn.click();\n  }\n\n  onChange() {\n    localStorage.setItem('pass', this.password);\n  }\n}\n","<!-- Modal-->\n<div class=\"modal fade\" id=\"register\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered \" role=\"document\">\n        <div class=\"modal-content content register-card \">\n            <div class=\"modal-body \">\n                <span class=\"login100-form-title p-b-33\">\n                    Register\n                </span>\n                <div class=\"divider register-divider \"></div>\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" class=\"my-form \" autocomplete=\"off\">\n                    <div class=\"register-field \" [class.error-outline]=\"regName!.invalid && regName!.touched\">\n                        <input formControlName=\"name\" name=\"name \" class=\"custom-input \" type=\"text \" placeholder=\"Username \">\n                    </div>\n                    <div class=\"register-field \" [class.error-outline]=\"regEmail!.invalid && regEmail!.touched\">\n                        <input formControlName=\"email\" name=\"email \" class=\"custom-input \" type=\"text \" placeholder=\"Email \">\n                    </div>\n                    <div class=\"register-field \" [class.error-outline]=\"regPassword!.invalid && regPassword!.touched\">\n                        <input formControlName=\"password\" name=\"password \" [(ngModel)]=\"password\" (input)=\"onChange()\" class=\"custom-input \" type=\"password\" placeholder=\"Password \">\n                    </div>\n                    <div class=\"register-field \" [class.error-outline]=\"regConfirm!.invalid && regConfirm!.touched\">\n                        <input formControlName=\"password2\" name=\"password2\" class=\"custom-input \" type=\"text \" type=\"password\" placeholder=\"Re enter your Password \">\n                    </div>\n                    <button class=\"my-button sign-up-btn \" id=\"js-register \" type=\"submit \">Sign Up</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<button hidden id=\"closereg\" data-toggle=\"modal\" type=\"button\" data-target=\"#register\"></button>","export class Details {\r\n  public custom: boolean = false;\r\n  constructor(\r\n    private url: string,\r\n    private names: string[],\r\n    private id: string,\r\n    private uids: string[]\r\n  ) {}\r\n\r\n  public get avatar() {\r\n    return this.url;\r\n  }\r\n\r\n  public get rid() {\r\n    return this.id;\r\n  }\r\n\r\n  public get unames() {\r\n    return this.names;\r\n  }\r\n\r\n  public get ids() {\r\n    return this.uids;\r\n  }\r\n\r\n  public set uNames(v: string) {\r\n    this.names.push(v);\r\n  }\r\n\r\n  public set idS(v: string) {\r\n    this.uids.push(v);\r\n  }\r\n}\r\n","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { SocketioService } from '../services/socketio.service';\nimport { Notification } from '../Models/notification';\nimport { DataShareService } from '../services/data-share.service';\nimport { pipe, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.css'],\n})\nexport class TopbarComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Output() timeout: EventEmitter<boolean> = new EventEmitter<boolean>();\n  public notificationList: Notification[] = [];\n  private observers: Subscription[] = [];\n  public notifications: boolean = true;\n  public profile: any = true;\n  public overlay: boolean = true;\n  public newmsg: boolean = false;\n  public active: boolean = true;\n\n  constructor(\n    private router: Router,\n    private dataShareService: DataShareService,\n    private io: SocketioService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.observers.forEach((observer) => {\n      observer.unsubscribe();\n    });\n    this.io.disconnectSocket();\n    this.timeout.emit(true);\n  }\n\n  ngAfterViewInit(): void {\n    this.io.setupSocketConnection();\n  }\n\n  ngOnInit(): void {\n    this.observers.push(\n      this.dataShareService.remote.subscribe((data: any) => {\n        this.notificationList.unshift(new Notification(data));\n        if (!this.notifications) {\n          this.newmsg = false;\n        } else {\n          this.newmsg = true;\n        }\n      })\n    );\n\n    //keep track of our current url\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: any) => {\n        if (event.url.startsWith('/users')) {\n          this.active = false;\n        } else {\n          this.active = true;\n        }\n      });\n  }\n\n  overlayCheck() {\n    this.profile = true;\n    this.notifications = true;\n    this.overlay = true;\n  }\n\n  notificationsCheck() {\n    this.notifications = !this.notifications;\n    if (!this.notifications) {\n      this.newmsg = false;\n    }\n    this.overlay = false;\n    if (!this.profile) {\n      this.profile = true;\n    }\n  }\n\n  notSwap(v: any) {\n    this.notifications = v;\n  }\n\n  ovSwap(v: any) {\n    this.overlay = v;\n    this.profile = v;\n  }\n\n  browse(index: any) {\n    this.dataShareService.swapCurrent(this.notificationList[index].getRoom());\n    this.notificationsCheck();\n  }\n\n  users() {\n    this.active = false;\n    this.router.navigateByUrl('users');\n  }\n\n  home() {\n    this.active = true;\n    this.router.navigateByUrl('');\n  }\n}\n","<div class=\"overlay\" (click)=\"overlayCheck()\" *ngIf=\"!overlay\"></div>\n<div class=\"top-navbar\">\n    <div class=\"options\">\n        <div class=\"messenger-wrapper\">\n            <i class=\"fas fa-comments\"></i>\n        </div>\n    </div>\n    <div class=\"options\">\n        <div class=\"home-wrapper\" [class.active]=\"active\" (click)='home()'>\n            <i class=\"fas fa-home\" [class.active]=\"active\"></i>\n        </div>\n        <div class=\"home-wrapper\" [class.active]=\"!active\" (click)='users()'>\n            <i class=\"fas fa-user-friends\" [class.active]=\"!active\"></i>\n        </div>\n    </div>\n    <div class=\"options\">\n        <div class=\"dropdown\">\n            <div class=\"bell-wrapper ts-notifications\" (click)='notificationsCheck()' [class.active-option]=\"!notifications\">\n                <i class=\"fas fa-bell ts-profile\"></i>\n                <i class=\"fas fa-circle notification\" *ngIf=\"newmsg\"></i>\n            </div>\n            <div class=\"notification-dropdown\" *ngIf=\"!notifications\">\n                <h1 style=\"font-size: 25px; margin-bottom:10px; margin-top:5px; \">Notifications</h1>\n                <div class=\"divider div-profile\"></div>\n                <div class=\"inner-wrapper\">\n                    <div class=\"profile-item item-margin\" *ngFor=\"let notification of notificationList; let i=index\" (click)=\"browse(i)\">\n                        <img [src]=\"notification.url\" class=\" avatar \" style=\"margin-top: 4px;\">\n                        <div class=\"details \">\n                            <div class=\"message\">{{notification.name}} send a message:</div>\n                            <small>{{notification.text}}</small>\n                            <div class=\"small-date\">at: {{ notification.date}}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <app-profile (ovCheck)=\"ovSwap($event)\" (notCheck)=\"notSwap($event)\" [prof]=\"profile\">\n        </app-profile>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService extends DataService {\n  constructor(http: HttpClient, er: ErrorHandlerService) {\n    super(http, er, 'https://chat-away-ang.herokuapp.com/');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css'],\n})\nexport class DemoComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  //demo validators\n  demoForm = new FormGroup({\n    name: new FormControl('', [Validators.minLength(3), Validators.required]),\n  });\n\n  loginDemo() {\n    if (this.demoForm.invalid) {\n      return;\n    }\n\n    let uname = this.demoForm.value.name;\n    this.authService\n      .register(uname + '', uname + '@email.com', 'demoAccount', 'demo')\n      .subscribe((res) => {\n        this.closeModal();\n        this.router.navigate(['']);\n      });\n  }\n\n  private closeModal() {\n    const btn = document.querySelector('#close') as HTMLElement;\n    btn.click();\n  }\n\n  get name() {\n    return this.demoForm.get('name');\n  }\n}\n","<div class=\"modal fade\" id=\"demo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered \" role=\"document\">\n        <div class=\"modal-content content register-card \">\n            <div class=\"modal-body \">\n                <span class=\"login100-form-title p-b-33\">\n                    Give a name\n                </span>\n                <div class=\"divider register-divider \"></div>\n                <form [formGroup]=\"demoForm\" (ngSubmit)=\"loginDemo()\" class=\"my-form input-outline\">\n                    <div class=\"register-field \" [class.input-outline]=\"name!.touched && !name!.invalid\" [class.error-outline]=\"name!.invalid && name!.touched\">\n                        <input name=\"name\" formControlName=\"name\" class=\"custom-input \" type=\"text \" placeholder=\"name... \">\n                    </div>\n                    <button class=\"my-button sign-up-btn \" id=\"js-register \" type=\"submit \">Sign Up</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<button hidden id=\"close\" data-toggle=\"modal\" type=\"button\" data-target=\"#demo\"></button>","import { formatDate } from '@angular/common';\r\n\r\nexport class Notification {\r\n  public name: string = '';\r\n  public custom: boolean = false;\r\n  public date!: string;\r\n  public url: string = '';\r\n  public receiver: string = '';\r\n  public sender: string = '';\r\n  public text: string = '';\r\n\r\n  constructor(data: any) {\r\n    this.date = formatDate(\r\n      new Date(),\r\n      'dd/MM/yyyy hh:mm:ss a',\r\n      'en-US',\r\n      '+0530'\r\n    );\r\n    this.name = data.senderName;\r\n    this.sender = data.sender;\r\n    this.receiver = data.receiver;\r\n    this.url = data.url;\r\n    this.custom = data.custom;\r\n    this.text = data.text;\r\n  }\r\n\r\n  getRoom() {\r\n    if (this.custom) {\r\n      return this.receiver;\r\n    } else {\r\n      return this.sender;\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, OnDestroy } from '@angular/core';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { DataShareService } from '../services/data-share.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit, AfterViewInit, OnDestroy {\n  private el: any;\n  public slide: boolean = false;\n  public fade: boolean = false;\n  public loader: boolean = false;\n  private cId: any;\n  private observers: Subscription[] = [];\n\n  @ViewChild('chat') chatArea: any;\n\n  constructor(private dataShare: DataShareService, private r: Router) {}\n\n  ngOnDestroy() {\n    this.observers.forEach((observer) => {\n      observer.unsubscribe();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.el = this.chatArea.nativeElement;\n    this.observers.push(\n      this.dataShare.local.subscribe((d: any) => {\n        this.smoothScrolling();\n      })\n    );\n  }\n\n  ngOnInit(): void {\n    //room switched\n    this.observers.push(\n      this.dataShare.message.subscribe((message: any = []) => {\n        if (message.id != this.cId) {\n          this.loader = true;\n        }\n        this.smoothScrolling();\n        this.cId = message.id;\n        this.fadeOut();\n      })\n    );\n\n    //stop the loader\n    this.observers.push(\n      this.dataShare.loader.subscribe(() => {\n        this.loader = false;\n        this.smoothScrolling();\n      })\n    );\n  }\n\n  //scroll to bottom\n  smoothScrolling() {\n    setTimeout(() => {\n      this.el.scrollTop = this.el.scrollHeight - this.el.clientHeight;\n    }, 200);\n  }\n\n  slideRight() {\n    this.slide = !this.slide;\n  }\n\n  fadeOut() {\n    this.fade = true;\n    setTimeout(() => {\n      this.fade = false;\n    }, 800);\n  }\n}\n","<chat-rooms></chat-rooms>\r\n<div class=\"content-wrapper\" [class.shorter]=\"slide\">\r\n    <active-info (slide)=\"slideRight()\"></active-info>\r\n    <div id=\"ts-chat\" class=\"chat-area\" [class.fadeout]=\"fade\" #chat>\r\n        <div *ngIf=\"loader\" class=\"loader\"></div>\r\n        <router-outlet name='chatArea'></router-outlet>\r\n    </div>\r\n    <input-field></input-field>\r\n</div>\r\n<room-info [class.hidden]=\"!slide\"></room-info>","import { Comment } from './comment';\r\n\r\nexport class SentComment extends Comment {\r\n  constructor(data: any) {\r\n    super(data);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  SOCKET_ENDPOINT: 'http://localhost:5000',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { ErrorHandlerService } from './error-handler.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataService {\r\n  private options: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private errorHandler: ErrorHandlerService,\r\n    @Inject(String) private readonly url: string\r\n  ) {\r\n    const headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    this.options = { headers: headers, withCredentials: true };\r\n  }\r\n\r\n  //get all\r\n  getAll(uri: string): Observable<any> {\r\n    return this.http.get(this.url + uri, this.options).pipe(\r\n      map((res: any = []) => {\r\n        return res;\r\n      }),\r\n      catchError(this.errorHandler.handleError)\r\n    );\r\n  }\r\n\r\n  getComments(uri: string, roomData: any): Observable<any> {\r\n    return this.http.post(this.url + uri, roomData, this.options).pipe(\r\n      map((res: any = []) => {\r\n        return res;\r\n      }),\r\n      catchError(this.errorHandler.handleError)\r\n    );\r\n  }\r\n\r\n  //get spesific user\r\n  getUser(uri: string): Observable<any> {\r\n    return this.http.get(this.url + uri, this.options).pipe(\r\n      map((res: any = []) => {\r\n        return res;\r\n      }),\r\n      catchError(this.errorHandler.handleError)\r\n    );\r\n  }\r\n\r\n  //post avatar\r\n  postAvatar(uri: string, file: any): Observable<any> {\r\n    return this.http.post(this.url + uri, file, this.options).pipe(\r\n      map((res: any = []) => {\r\n        return res;\r\n      }),\r\n      catchError(this.errorHandler.handleError)\r\n    );\r\n  }\r\n\r\n  //get avatar\r\n  getAvatar(uri: string): Observable<any> {\r\n    return this.http.get(this.url + uri, this.options).pipe(\r\n      map((res: any = []) => {\r\n        return res;\r\n      }),\r\n      catchError(this.errorHandler.handleError)\r\n    );\r\n  }\r\n\r\n  //get current room names\r\n  getNames(uri: string): Observable<any> {\r\n    return this.http.get(this.url + uri, this.options).pipe(\r\n      map((res: any = []) => {\r\n        return res;\r\n      }),\r\n      catchError(this.errorHandler.handleError)\r\n    );\r\n  }\r\n}\r\n","import { Comment } from './comment';\r\n\r\nexport class ReceivedComment extends Comment {\r\n  constructor(data: any, previousId: string) {\r\n    super(data);\r\n    this.foreign = true;\r\n    this.consecutive(previousId, data.sender);\r\n  }\r\n}\r\n","import { ViewContainerRef } from '@angular/core';\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appConversation]',\n})\nexport class ConversationDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, ReplaySubject, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataShareService {\n  //emit to the subscribers\n\n  constructor() {}\n  //change current user info header , buffer size = 1 cache always the last emmit\n  private changeName = new BehaviorSubject<Object>('');\n  message = this.changeName.asObservable();\n  public notifyChange(data: any) {\n    this.changeName.next(data);\n  }\n\n  //pass comment data to chatArea for new comments!!!\n  private commentData = new Subject<Object>();\n  remote = this.commentData.asObservable();\n  public sendRemote(d: any) {\n    this.commentData.next(d);\n  }\n\n  //pass comment data to chatArea for new comments!!!\n  private localData = new Subject<Object>();\n  local = this.localData.asObservable();\n  public sendlocal(d: any) {\n    this.localData.next(d);\n  }\n\n  //potentially some one made a new account so we need to render them on the list\n  private refreshRooms = new Subject<string>();\n  refresh = this.refreshRooms.asObservable();\n  public refreshUsers(id: string) {\n    this.refreshRooms.next(id);\n  }\n\n  //update status\n  private userStatus = new ReplaySubject<string>();\n  status = this.userStatus.asObservable();\n  public updateStatus(id: string) {\n    this.userStatus.next(id);\n  }\n\n  //send new url to chat room\n  private updateUrl = new ReplaySubject<string>();\n  changeUrl = this.updateUrl.asObservable();\n  public sendUrl(url: string) {\n    this.updateUrl.next(url);\n  }\n\n  //swap current room\n  private swap = new ReplaySubject<string>();\n  swapRoom = this.swap.asObservable();\n  public swapCurrent(id: string) {\n    this.swap.next(id);\n  }\n\n  //room loader\n  private load = new ReplaySubject<boolean>();\n  loader = this.load.asObservable();\n  public stopLoading() {\n    this.load.next(true);\n  }\n\n  //invited to custom room\n  private room = new Subject<Object>();\n  newRoom = this.room.asObservable();\n  public sendRoom(room: any) {\n    this.room.next(room);\n  }\n\n  //in which room we will be saving the comments\n  private roomId = new Subject<string>();\n  writeToRoom = this.roomId.asObservable();\n  public sendroomId(id: string) {\n    this.roomId.next(id);\n  }\n\n  //open new room list\n  private opener = new Subject<boolean>();\n  openList = this.opener.asObservable();\n  public switch(state: boolean) {\n    this.opener.next(state);\n  }\n\n  //in which room we will be saving the comments\n  private users = new Subject<any>();\n  passUsers = this.users.asObservable();\n  public passToComponent(users: any) {\n    this.users.next(users);\n  }\n}\n","import { commentInt } from './commentInt';\r\n\r\nexport class Comment implements commentInt {\r\n  //declare as public for now\r\n  public text: string = '';\r\n  public url: string = '';\r\n  public name: string = '';\r\n  public isFirst: boolean = true;\r\n  public foreign: boolean = false;\r\n  public shouldBeRendered: boolean = true;\r\n\r\n  constructor(data: any) {\r\n    this.text = data.text;\r\n    this.url = data.url;\r\n    this.name = data.senderName;\r\n  }\r\n\r\n  consecutive(previous: string, id: string): void {\r\n    if (previous == id) {\r\n      this.isFirst = false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuardService implements CanActivate {\n  private authService: any;\n  private router: any;\n\n  constructor(a: AuthService, r: Router) {\n    this.authService = a;\n    this.router = r;\n  }\n\n  //ensure if a route can be activated\n  canActivate() {\n    if (this.authService.isAuthenticated()) {\n      return true;\n    }\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { io, Socket } from 'socket.io-client';\nimport { AuthService } from './auth.service';\nimport { DataShareService } from './data-share.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SocketioService {\n  private socket: any;\n\n  constructor(\n    private auth: AuthService,\n    private forwardMessage: DataShareService\n  ) {}\n\n  public setupSocketConnection() {\n    //init , connect and create aprivate room for each user\n    this.socket = io('https://chat-away-ang.herokuapp.com');\n    this.socket.emit('userJoin', this.auth.getUserInfo().id);\n\n    //some one joined , possibly a new account\n    this.socket.on('joined', (data: any) => {\n      this.forwardMessage.refreshUsers(data.id);\n      this.forwardMessage.updateStatus(data);\n    });\n\n    //listen for messages\n    this.socket.on('message', (data: any) => {\n      this.forwardMessage.sendRemote(data.message);\n    });\n\n    //keep an eye out for anyone who might disconnect\n    this.socket.on('left', (data: any) => {\n      this.forwardMessage.updateStatus(data);\n    });\n\n    //some one added\n    this.socket.on('invite', (room: any) => {\n      this.forwardMessage.sendRoom(room);\n      this.socket.emit('accept', room.id);\n    });\n  }\n\n  //new custom room\n  public newRoom(members: any, name: string) {\n    this.socket.emit('newRoom', { name: name, members: members });\n  }\n\n  //invite some one to a custom room\n  public invite(uid: string, rid: any) {\n    this.socket.emit('add', { uid: uid, rid: rid });\n  }\n\n  //send messages\n  public messageSubmit(message: any) {\n    this.socket.emit('message', message);\n  }\n\n  //disconnect on logout\n  public disconnectSocket() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n}\n","import { SentComment } from './sentComment';\r\nimport { ReceivedComment } from './receivedComment';\r\nimport { commentInt } from './commentInt';\r\n\r\nexport class CommentFactory {\r\n  private userId: string = '';\r\n  constructor(uid: string) {\r\n    this.userId = uid;\r\n  }\r\n\r\n  public newComment(previous: string, data: any): commentInt {\r\n    if (data.sender == this.userId) {\r\n      return new SentComment(data);\r\n    } else {\r\n      return new ReceivedComment(data, previous);\r\n    }\r\n  }\r\n}\r\n","import {\n  Component,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'Angular';\n  //private authObserver: Observable<any> | undefined;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  logout(e: any) {\n    this.authService.logout('logout').subscribe(() => {\n      this.authService.removeUserInfo();\n      this.router.navigateByUrl('/login');\n    });\n  }\n\n  public get navBar() {\n    return this.authService.isAuthenticated();\n  }\n}\n","<app-topbar *ngIf=\"navBar\" (timeout)=\"logout($event)\"></app-topbar>\r\n<router-outlet></router-outlet>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DemoService extends DataService {\n  constructor(http: HttpClient, er: ErrorHandlerService) {\n    super(http, er, 'https://chat-away-ang.herokuapp.com/');\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { ErrorHandlerService } from './error-handler.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommentsService extends DataService {\r\n  constructor(http: HttpClient, er: ErrorHandlerService) {\r\n    super(http, er, 'https://chat-away-ang.herokuapp.com/');\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Comment } from '../commentFactory/comment';\r\n\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.css'],\r\n})\r\nexport class CommentComponent implements OnInit {\r\n  @Input() data: Comment | any;\r\n\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<div *ngIf=\"data.shouldBeRendered\">\n    <!----------not mine------------>\n    <div class=\"comment-wrapper not-my-comment \" *ngIf=\"data.foreign\">\n        <div class=\"comment \">\n            <div class=\"comment-user \" *ngIf=\"data.isFirst\">\n                <small>{{data.name}}</small>\n            </div>\n            <div class=\"inner-wrapper \">\n                <img [src]=\"data.url\" *ngIf=\"data.isFirst\" class=\"avatar \">\n                <div class=\"blank-avatar\" *ngIf=\"!data.isFirst\"></div>\n                <div class=\"comment-body comment-text \">\n                    {{data.text}}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!------------mine------------->\n    <div class=\"comment-wrapper my-comment \" *ngIf=\"!data.foreign\">\n        <div class=\"comment \">\n            <div class=\"inner-wrapper \">\n                <div class=\"comment-body comment-text \">\n                    {{data.text}}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","export class Room {\r\n  private commentsList: any = Array<Object>();\r\n  private senderId: string = '';\r\n  private roomId: string = '';\r\n\r\n  constructor(list: any, id: any, rid: any) {\r\n    this.commentsList = list;\r\n    this.senderId = id;\r\n    this.roomId = rid;\r\n  }\r\n\r\n  public get id() {\r\n    return this.roomId;\r\n  }\r\n\r\n  public addComment(comment: any) {\r\n    this.commentsList.push(comment);\r\n  }\r\n\r\n  public getSender() {\r\n    return this.senderId;\r\n  }\r\n\r\n  public getComments() {\r\n    return this.commentsList;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CommentComponent } from '../comment/comment.component';\r\nimport { CommentFactory } from '../commentFactory/factory';\r\nimport { Room } from '../Models/room';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { CommentsService } from '../services/comments.service';\r\nimport { DataShareService } from '../services/data-share.service';\r\nimport { FileService } from '../services/file.service';\r\nimport { ChatDirective } from './chat.directive';\r\n\r\n@Component({\r\n  selector: 'chat-area',\r\n  templateUrl: './chat-area.component.html',\r\n  styleUrls: ['./chat-area.component.css'],\r\n})\r\nexport class ChatAreaComponent implements OnInit, OnDestroy {\r\n  @ViewChild(ChatDirective, { static: true })\r\n  appChat!: ChatDirective;\r\n\r\n  private rooms: any = Array<Room>();\r\n  private vc!: ViewContainerRef;\r\n  private activeRoom: any;\r\n  private previousId: string = '';\r\n  private observers: Subscription[] = [];\r\n  private factory: CommentFactory = new CommentFactory(\r\n    this.auth.getUserInfo().id\r\n  );\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private fetchData: DataShareService,\r\n    private commentsService: CommentsService,\r\n    private auth: AuthService\r\n  ) {}\r\n\r\n  ngOnDestroy() {\r\n    this.observers.forEach((observer) => {\r\n      observer.unsubscribe();\r\n    });\r\n    this.rooms = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    //on room change\r\n    this.observers.push(\r\n      this.fetchData.message.subscribe((data: any) => {\r\n        if (data.id == this.activeRoom) return;\r\n        this.vc = this.appChat.viewContainerRef;\r\n        this.vc.clear();\r\n        this.activeRoom = data.id;\r\n        this.getRoom();\r\n      })\r\n    );\r\n\r\n    // local comment\r\n    this.observers.push(\r\n      this.fetchData.local.subscribe((data: any) => {\r\n        this.commentSectionInit(data);\r\n        this.saveLocal(this.activeRoom, data);\r\n      })\r\n    );\r\n\r\n    //received comment\r\n    this.observers.push(\r\n      this.fetchData.remote.subscribe((data: any) => {\r\n        if (data.custom) {\r\n          this.saveLocal(data.receiver, data);\r\n          if (data.receiver == this.activeRoom) {\r\n            this.commentSectionInit(data);\r\n          }\r\n        } else {\r\n          this.saveLocal(data.sender, data);\r\n          if (this.activeRoom == data.sender) {\r\n            this.commentSectionInit(data);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  saveLocal(id: string, data: any) {\r\n    this.rooms.forEach((room: any) => {\r\n      if (room.getSender() == id) {\r\n        room.addComment(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  renderer(comments: any, rid: string) {\r\n    this.previousId = '';\r\n    this.vc.clear();\r\n    comments.forEach((comment: any) => {\r\n      this.commentSectionInit(comment);\r\n    });\r\n    this.fetchData.stopLoading();\r\n    this.fetchData.sendroomId(rid);\r\n  }\r\n\r\n  getRoom() {\r\n    for (let room of this.rooms) {\r\n      if (room.getSender() == this.activeRoom) {\r\n        this.renderer(room.getComments(), room.id);\r\n        return;\r\n      }\r\n    }\r\n    this.fetchFromServer();\r\n  }\r\n\r\n  fetchFromServer() {\r\n    this.observers.push(\r\n      this.commentsService\r\n        .getComments('room', {\r\n          receiver: this.activeRoom,\r\n          sender: this.auth.getUserInfo().id,\r\n        })\r\n        .subscribe((response) => {\r\n          let room = new Room(response.comments, response.room, response.rid);\r\n          this.rooms.push(room);\r\n          this.renderer(response.comments, room.id);\r\n        })\r\n    );\r\n  }\r\n\r\n  //create a comment instance for each comment\r\n  commentSectionInit(data: any) {\r\n    this.vc = this.appChat.viewContainerRef;\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\r\n      CommentComponent\r\n    );\r\n    const componentRef = this.vc.createComponent<CommentComponent>(\r\n      componentFactory\r\n    );\r\n    const newComment = this.factory.newComment(this.previousId, data);\r\n    (<CommentComponent>componentRef.instance).data = newComment;\r\n    this.previousId = data.sender;\r\n  }\r\n}\r\n","<ng-template appChat></ng-template>","import { Input, OnDestroy, Output, ViewChild } from '@angular/core';\nimport { AfterViewInit, Component, OnInit, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { DataShareService } from '../services/data-share.service';\nimport { FileService } from '../services/file.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('imagePreview') preview: any;\n  @ViewChild('input') imgInput: any;\n  @Output() notCheck: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() ovCheck: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Input() not: any;\n  @Input() prof: any;\n\n  private el: any;\n  private observers: Subscription[] = [];\n  public file: any;\n  public exp: string = 'translateX(0px)';\n  public expHeight: string = '197px';\n  public url: string = this.authService.getUserInfo().avatar;\n  public name: string = this.authService.getUserInfo().name;\n  public fadeIn: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private fileService: FileService,\n    private dataShare: DataShareService,\n    private router: Router\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.el = this.preview.nativeElement;\n    this.file = this.imgInput.nativeElement;\n  }\n\n  ngOnInit(): void {\n    let url = localStorage.getItem('url');\n    if (url) {\n      this.url = url;\n    }\n    this.dataShare.sendUrl(this.url);\n  }\n\n  ngOnDestroy() {\n    localStorage.removeItem('url');\n    this.observers.forEach((observer) => {\n      observer.unsubscribe();\n    });\n  }\n\n  changeAvatar() {\n    if (this.isDemo) {\n      return;\n    }\n    this.exp = 'translateX(-297px)';\n    this.expHeight = '400px';\n  }\n\n  slide() {\n    this.exp = 'translateX(0px)';\n    this.expHeight = '197px';\n    this.fadeIn = false;\n    setTimeout(() => {\n      this.el.style.backgroundImage = 'url(' + this.url + ')';\n    }, 200);\n  }\n\n  previewAvatar() {\n    let reader = new FileReader();\n    let element = this.el;\n    reader.onload = function (e: any) {\n      element.style.backgroundImage = 'url(' + e.target.result + ')';\n    };\n    reader.readAsDataURL(this.file.files[0]);\n    this.fadeIn = true;\n    setTimeout(() => {\n      this.fadeIn = false;\n    }, 500);\n  }\n\n  upload() {\n    if (this.file && this.file.files[0]) {\n      const fd = new FormData();\n      fd.append('image', this.file.files[0]);\n      fd.append('uid', this.authService.getUserInfo().id);\n      this.observers.push(\n        this.fileService\n          .postAvatar('avatar', fd)\n          .subscribe((response: any = []) => {\n            this.url = response.path;\n            this.slide();\n            localStorage.setItem('url', this.url);\n            this.dataShare.sendUrl(this.url);\n          })\n      );\n    }\n  }\n\n  profileCheck() {\n    this.notCheck.emit(true);\n    this.ovCheck.emit(!this.prof);\n  }\n\n  logout() {\n    this.observers.push(\n      this.authService.logout('logout').subscribe(() => {\n        this.authService.removeUserInfo();\n        this.router.navigateByUrl('logout');\n      })\n    );\n  }\n\n  get isDemo() {\n    return this.authService.isDemo();\n  }\n}\n","<div class=\"dropdown\">\n  <div\n    class=\"profile-wrapper ts-profile\"\n    (click)=\"profileCheck()\"\n    [class.active-option]=\"!prof\"\n  >\n    <i class=\"fas fa-user ts-profile\"></i>\n  </div>\n  <div\n    class=\"profile-dropdown js-drop\"\n    [style.maxHeight]=\"expHeight\"\n    [class.hidden]=\"prof\"\n  >\n    <div class=\"slide2\" [style.transform]=\"exp\">\n      <div class=\"profile-item js-avatar\" (click)=\"changeAvatar()\">\n        <img [src]=\"url\" class=\"user-avatar\" />\n        <div class=\"details\">\n          <h1 style=\"font-size: 25px\" [class.name]=\"!isDemo\">{{ name }}</h1>\n          <small *ngIf=\"!isDemo\">Change Avatar</small>\n        </div>\n      </div>\n      <div class=\"divider\"></div>\n      <div class=\"cus-ref\" (click)=\"logout()\">\n        <div class=\"log-out\">\n          <i class=\"fas fa-sign-out-alt\"></i>\n          <h1 style=\"font-size: 25px\">Log Out</h1>\n        </div>\n      </div>\n    </div>\n    <div class=\"slide1\" [style.transform]=\"exp\">\n      <i class=\"fas fa-times ts-close\" (click)=\"slide()\"></i>\n      <h1 style=\"font-size: 20px; margin-bottom: 2px; margin-top: 8px\">\n        Choose a photo\n      </h1>\n      <div class=\"container\">\n        <div class=\"avatar-upload\">\n          <form class=\"avatar-edit\">\n            <input\n              name=\"file\"\n              (change)=\"previewAvatar()\"\n              #input\n              type=\"file\"\n              id=\"imageUpload\"\n              accept=\".png, .jpg, .jpeg\"\n            />\n            <label for=\"imageUpload\"></label>\n          </form>\n          <div class=\"avatar-preview\">\n            <div\n              [class.fadeout]=\"fadeIn\"\n              #imagePreview\n              [style.backgroundImage]=\"'url(' + url + ')'\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"divider\"></div>\n      <div class=\"log-out ts-up\" (click)=\"upload()\">\n        <i class=\"fas fa-upload\"></i>\n        <h1 style=\"font-size: 25px\">Upload</h1>\n      </div>\n    </div>\n  </div>\n</div>\n","import { AfterViewInit } from '@angular/core';\nimport {\n  Component,\n  OnDestroy,\n  OnInit,\n  Output,\n  EventEmitter,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User } from '../Models/user';\nimport { AuthService } from '../services/auth.service';\nimport { DataShareService } from '../services/data-share.service';\nimport { SocketioService } from '../services/socketio.service';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'active-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.css'],\n})\nexport class InfoComponent implements OnInit, OnDestroy {\n  @Output() slide: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  private custom: any;\n  public infoName: string = '';\n  public info: string = '';\n  public url: any;\n  public name: string = '';\n  private users: User[] = [];\n  private observers: Subscription[] = [];\n  private cid: string = '';\n  public open: boolean = false;\n\n  constructor(\n    private dataShare: DataShareService,\n    private io: SocketioService,\n    private auth: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.observers.push(\n      this.dataShare.openList.subscribe((v: any) => {\n        this.openList(v);\n      })\n    );\n\n    //get users\n    this.observers.push(\n      this.dataShare.passUsers.subscribe((users: any) => {\n        for (const user of users) {\n          if (!user.custom) {\n            this.users.push(new User(user));\n          }\n        }\n      })\n    );\n\n    //status check\n    this.observers.push(\n      this.dataShare.status.subscribe((data: any) => {\n        if (this.custom || this.cid != data.id) return;\n        if (this.info == 'Active now.') {\n          this.info = 'Offline.';\n        } else {\n          this.info = 'Active now.';\n        }\n      })\n    );\n\n    //get current\n    this.observers.push(\n      this.dataShare.message.subscribe((message: any = []) => {\n        this.infoName = message.name;\n        this.url = message.avatar;\n        this.changeStatus(message.status);\n        this.custom = message.custom;\n        this.cid = message.id;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.observers.forEach((observer) => {\n      observer.unsubscribe();\n    });\n  }\n\n  changeStatus(status: boolean) {\n    if (status) {\n      this.info = 'Active now.';\n    } else {\n      this.info = 'Offline.';\n    }\n  }\n\n  select(index: number) {\n    this.users[index].active = !this.users[index].active;\n  }\n\n  submit() {\n    let members: any[] = [];\n    this.users.forEach((user) => {\n      if (user.active) {\n        members.push(user.details.id);\n        user.active = false;\n      }\n    });\n    members.push(this.auth.getUserInfo().id);\n    if (members.length < 2 || this.name.length < 2) {\n      return;\n    }\n    this.io.newRoom(members, this.name);\n    this.openList(false);\n  }\n\n  openList(v: boolean) {\n    this.open = v;\n    this.name = '';\n    if (!this.open) {\n      this.users.forEach((user) => {\n        user.active = false;\n      });\n    }\n  }\n\n  get usersList() {\n    return this.users;\n  }\n\n  slider() {\n    this.slide.emit(true);\n  }\n}\n","<div class=\"chat-info \">\n    <img [src]=\"url\" *ngIf=\"!open\" class=\"user-avatar\">\n    <form class=\"user-details \">\n        <input *ngIf=\"open\" [(ngModel)]=\"name\" name=\"name\" class=\"custom\" (keyup.enter)=\"submit()\" type=\"text\" placeholder=\"name your room and add people!\" autofocus>\n        <h1 class=\"js-info\" *ngIf=\"!open\">{{infoName}}</h1>\n        <small class=\"js-info\" *ngIf=\"!open\">{{info}}</small>\n    </form>\n    <div *ngIf=\"open\" class=\"notification-dropdown\">\n        <div class=\"profile-item\" *ngFor=\"let user of usersList; let i=index \" (click)=\"select(i)\">\n            <img [src]=\"user.details.avatar\" class=\" avatar \" style=\"margin-top: 0px;\">\n            <div class=\"details \">\n                <div class=\"message\">{{user.details.name}}</div>\n            </div>\n            <i class=\"fas fa-check\" *ngIf=\"user.active\"></i>\n        </div>\n    </div>\n    <i class=\"fas fa-info-circle info\" (click)=\"slider()\"></i>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuardService as AuthGuard } from './services/auth-guard.service';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { HomeComponent } from './home/home.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { JwtHelperService, JwtModule } from '@auth0/angular-jwt';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport { RegisterComponent } from './register/register.component';\nimport { DataShareService } from './services/data-share.service';\nimport { ChatAreaComponent } from './chat-area/chat-area.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { ChatDirective } from './chat-area/chat.directive';\nimport { ConversationDirective } from './home/conversation.directive';\nimport { SocketioService } from './services/socketio.service';\nimport { ChatRoomsComponent } from './chat-rooms/chat-rooms.component';\nimport { DataService } from './services/data.service';\nimport { UsersService } from './services/users.service';\nimport { InputFieldComponent } from './input-field/input-field.component';\nimport { CommentsService } from './services/comments.service';\nimport { FormsModule } from '@angular/forms';\nimport { InfoComponent } from './info/info.component';\nimport { FileService } from './services/file.service';\nimport { RoomInfoComponent } from './room-info/room-info.component';\nimport { AuthService } from './services/auth.service';\nimport { UsersComponent } from './users/users.component';\nimport { PopUpComponent } from './pop-up/pop-up.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DemoComponent } from './demo/demo.component';\nimport { DemoService } from './services/demo.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    NotFoundComponent,\n    HomeComponent,\n    TopbarComponent,\n    RegisterComponent,\n    ChatAreaComponent,\n    CommentComponent,\n    ChatDirective,\n    ConversationDirective,\n    ChatRoomsComponent,\n    InputFieldComponent,\n    InfoComponent,\n    RoomInfoComponent,\n    UsersComponent,\n    PopUpComponent,\n    ProfileComponent,\n    DemoComponent,\n  ],\n  imports: [\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    JwtModule,\n    FormsModule,\n  ],\n  providers: [\n    AuthGuard,\n    CookieService,\n    JwtHelperService,\n    ErrorHandlerService,\n    RegisterComponent,\n    DataShareService,\n    SocketioService,\n    DataService,\n    UsersService,\n    CommentsService,\n    FileService,\n    AuthService,\n    DemoService,\n  ],\n  bootstrap: [AppComponent],\n  exports: [RouterModule],\n})\nexport class AppModule {}\n","import { AfterViewInit, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { DataShareService } from '../services/data-share.service';\r\nimport { UsersService } from '../services/users.service';\r\nimport { User } from '../Models/user';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'chat-rooms',\r\n  templateUrl: './chat-rooms.component.html',\r\n  styleUrls: ['./chat-rooms.component.css'],\r\n})\r\nexport class ChatRoomsComponent implements OnInit, OnDestroy {\r\n  private users: Array<User> = [];\r\n  public userName: string = '';\r\n  private activeRoom: number = 0;\r\n  private observers: Array<Subscription> = [];\r\n  public active: boolean = false;\r\n\r\n  constructor(\r\n    private r: Router,\r\n    private userService: UsersService,\r\n    private dataShare: DataShareService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.observers.forEach((observer) => {\r\n      observer.unsubscribe();\r\n    });\r\n    this.users = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.observers.push(\r\n      this.userService.getAll('usersAll').subscribe((response) => {\r\n        this.initUsers(response.users);\r\n      })\r\n    );\r\n\r\n    //refresh users\r\n    this.observers.push(\r\n      this.dataShare.refresh.subscribe((id) => {\r\n        setTimeout(() => {\r\n          this.addUser(id);\r\n        }, 2000);\r\n      })\r\n    );\r\n\r\n    //update status\r\n    this.observers.push(\r\n      this.dataShare.status.subscribe((data) => {\r\n        this.updateStatus(data);\r\n      })\r\n    );\r\n\r\n    //swap current room from notifications\r\n    this.observers.push(\r\n      this.dataShare.swapRoom.subscribe((id) => {\r\n        let i = 0;\r\n        this.users.forEach((user) => {\r\n          if (user.details.id == id) {\r\n            this.changeRoom(i);\r\n          }\r\n          i++;\r\n        });\r\n      })\r\n    );\r\n\r\n    //invited to new room\r\n    this.observers.push(\r\n      this.dataShare.newRoom.subscribe((room) => {\r\n        this.users.push(new User(room));\r\n      })\r\n    );\r\n  }\r\n\r\n  addUser(id: string) {\r\n    for (const user of this.users) {\r\n      if (user.details.id == id) return;\r\n    }\r\n    this.observers.push(\r\n      this.userService\r\n        .getUser('usersAll/' + id)\r\n        .subscribe((response: any = []) => {\r\n          this.users.push(new User(response.user));\r\n        })\r\n    );\r\n  }\r\n\r\n  changeRoom(index: any) {\r\n    if (index < this.users.length) {\r\n      this.dataShare.notifyChange({\r\n        name: this.users[index].details.name,\r\n        id: this.users[index].details.id,\r\n        status: this.users[index].status,\r\n        avatar: this.users[index].details.avatar,\r\n        custom: this.users[index].details.custom,\r\n      });\r\n      this.r.navigate([\r\n        { outlets: { chatArea: ['chat', this.users[index].details.id] } },\r\n      ]);\r\n      this.users[this.activeRoom].active = false;\r\n      this.users[index].active = true;\r\n      this.activeRoom = index;\r\n    }\r\n  }\r\n\r\n  updateStatus(data: any) {\r\n    this.users.forEach((user: any) => {\r\n      if (user.details.id == data.id) {\r\n        user.status = data.alive;\r\n      }\r\n    });\r\n  }\r\n\r\n  initUsers(users: any) {\r\n    for (const user of users) {\r\n      this.users.push(new User(user));\r\n    }\r\n    this.dataShare.passToComponent(users);\r\n    this.changeRoom(0);\r\n  }\r\n\r\n  searchUser() {\r\n    for (const user of this.users) {\r\n      if (\r\n        !(user.details.name as string)\r\n          .trim()\r\n          .toLowerCase()\r\n          .startsWith(this.userName.trim().toLowerCase())\r\n      ) {\r\n        user.isVisible = false;\r\n      } else {\r\n        user.isVisible = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.active = !this.active;\r\n    this.dataShare.switch(this.active);\r\n  }\r\n\r\n  get getUsers() {\r\n    return this.users;\r\n  }\r\n\r\n  get isDemo() {\r\n    return this.authService.isDemo();\r\n  }\r\n}\r\n","<div class=\"sidenav \">\n    <div class=\"side-top \">\n        <div class=\"chat-header \">\n            <span id=\"ts-chat\">\n                <b>Chats</b>\n            </span>\n            <div *ngIf=\"!isDemo\" class=\"new-room\" [class.active]=\"active\" (click)=\"toggle()\">\n                <i class=\"fas fa-edit plus\"></i>\n            </div>\n        </div>\n        <form class=\"search-chat search-field \">\n            <i class=\"fas fa-search \"></i>\n            <input name=\"userName\" [(ngModel)]=\"userName\" (keyup)=\"searchUser() \" class=\"my-input \" placeholder=\"search people or rooms \">\n        </form>\n    </div>\n    <ul class=\"user-list\">\n        <li class=\"ts-user \" *ngFor=\"let user of getUsers;let i=index \" (click)=\"changeRoom(i) \">\n            <div class=\"inner-content\" *ngIf=\"user.isVisible\" [class.active]=\"user.active\">\n                <img [src]=\"user.details.avatar\" class=\"user-avatar \">\n                <div class=\"last-msg \">\n                    <h1 class=\"ts-name\" style=\"margin-bottom:0px; font-size: 15px; \">{{user.details.name}}</h1>\n                </div>\n                <div class=\"status \" [class.alive]=\"user.status \">\n                    <i class=\"fas fa-circle \"></i>\n                </div>\n            </div>\n        </li>\n    </ul>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\nimport { ErrorHandlerService } from './error-handler.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileService extends DataService {\n  constructor(http: HttpClient, er: ErrorHandlerService) {\n    super(http, er, 'https://chat-away-ang.herokuapp.com/');\n  }\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function mustMatch(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    let confirmPassword = control.value as string;\r\n    let password = localStorage.getItem('pass') as string;\r\n\r\n    if (confirmPassword != password) {\r\n      return { mustMatch: false };\r\n    }\r\n    return null;\r\n  };\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { catchError, map } from 'rxjs/operators';\nimport jwt_decode from 'jwt-decode';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private http: HttpClient;\n  private errorHandler: ErrorHandlerService;\n  private readonly URL = 'https://chat-away-ang.herokuapp.com/';\n  private options: any;\n  private jwtHelper: any;\n\n  constructor(http: HttpClient, er: ErrorHandlerService) {\n    this.http = http;\n    this.errorHandler = er;\n    this.jwtHelper = new JwtHelperService();\n\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    this.options = { headers: headers, withCredentials: true };\n  }\n\n  //main authentication routine\n  public isAuthenticated(): Boolean {\n    let token = localStorage.getItem('token') as string;\n    if (!token) {\n      return false;\n    }\n    if (this.jwtHelper.isTokenExpired(token)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  //get info from token\n  public getUserInfo() {\n    let token = localStorage.getItem('token') as string;\n    let dec: any = jwt_decode(token);\n    return {\n      name: dec.name,\n      email: dec.email,\n      id: dec.id,\n      avatar: dec.avatar,\n      demo: dec.demo,\n    };\n  }\n\n  //check demo\n  public isDemo() {\n    return this.getUserInfo().demo;\n  }\n\n  //store user info into the local storage\n  public setUserInfo(token: any) {\n    localStorage.setItem('token', JSON.stringify(token));\n  }\n\n  //remove user on logout\n  public removeUserInfo() {\n    localStorage.clear();\n  }\n\n  //call the server to validate\n  public validate(\n    email: String,\n    password: String,\n    uri: String\n  ): Observable<any> {\n    return this.http\n      .post(this.URL + uri, { email: email, password: password }, this.options)\n      .pipe(\n        map((res: any = []) => {\n          //we wont be handling the error here\n          this.setUserInfo(res.user);\n          return res;\n        })\n      );\n  }\n\n  //manual logout\n  public logout(uri: String): Observable<any> {\n    return this.http\n      .get(this.URL + uri, { withCredentials: true, responseType: 'text' })\n      .pipe(catchError(this.errorHandler.handleError));\n    //return throwError('Something bad happened; please try again later.');\n  }\n\n  //register\n  public register(\n    name: String,\n    email: String,\n    password: String,\n    uri: String\n  ): Observable<any> {\n    return this.http\n      .post(\n        this.URL + uri,\n        { name: name, email: email, password: password },\n        this.options\n      )\n      .pipe(\n        map((res: any = []) => {\n          this.setUserInfo(res.user);\n          return res;\n        }),\n        catchError(this.errorHandler.handleError)\n      );\n  }\n}\n","export class User {\r\n  public status: boolean = true;\r\n  public details: any;\r\n  public isVisible: boolean = true;\r\n  public active = false;\r\n\r\n  constructor(userData: any) {\r\n    this.details = userData;\r\n    if (userData.alive == true || userData.alive == false) {\r\n      this.status = userData.alive;\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport class EmailValidators {\r\n  static shouldBeUnique(\r\n    control: AbstractControl\r\n  ): Promise<ValidationErrors | null> {\r\n    return new Promise(async (resolve, reject) => {\r\n      let email = control.value as string;\r\n      await fetch('https://chat-away-ang.herokuapp.com/validateEmail', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: email }),\r\n      })\r\n        .then((response: any = []) => {\r\n          return response.json();\r\n        })\r\n        .then((res: any = []) => {\r\n          if (res.found) {\r\n            resolve({ shouldBeUnique: false });\r\n          } else {\r\n            resolve(null);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          if (err) {\r\n            reject({\r\n              error:\r\n                'Could not resolve request , most likely the server is out of reach',\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n  constructor(private userService: UsersService) {}\n\n  private users$!: Observable<any[]>; // hmm the async pipe is tricky to deal with\n  private usersList: any = []; //if we have objects\n  private observers: Subscription[] = [];\n\n  ngOnInit(): void {\n    this.observers.push(\n      this.userService.getAll('usersAll').subscribe((res) => {\n        this.usersList = res.users;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.observers.forEach((observer) => {\n      observer.unsubscribe();\n    });\n  }\n\n  public get all() {\n    return this.usersList;\n  }\n}\n","<div class=\"user-wrapper\">\n    <h1 style=\"color:rgb(209, 209, 209)\">Nothing interesting here</h1>\n    <ng-container *ngFor=\"let user of all\">\n        <div class=\"user-item\" *ngIf=\"!user.custom\">\n            <div class=\"avatar-info\">\n                <img [src]=\"user.avatar\" class=\"user-avatar\">\n                <i class=\"fas fa-circle\" *ngIf=\"user.alive\"></i>\n                <i class=\"fas fa-circle \" style=\"color:grey\" *ngIf=\"!user.alive\"></i>\n            </div>\n            <div class=\"user-details\">\n                <h1 style=\"font-size:20px;\">{{user.name}}</h1>\n            </div>\n        </div>\n    </ng-container>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Details } from '../Models/details';\nimport { DataShareService } from '../services/data-share.service';\nimport { UsersService } from '../services/users.service';\nimport { AuthService } from '../services/auth.service';\nimport { User } from '../Models/user';\n\n@Component({\n  selector: 'room-info',\n  templateUrl: './room-info.component.html',\n  styleUrls: ['./room-info.component.css'],\n})\nexport class RoomInfoComponent implements OnInit, OnDestroy {\n  private info: Details[] = [];\n  private observers: Subscription[] = [];\n  private current!: Details;\n\n  constructor(\n    private dataShare: DataShareService,\n    private userService: UsersService,\n    private auth: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.observers.push(\n      this.dataShare.message.subscribe((data: any) => {\n        this.displayInfo(data);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.observers.forEach((observer) => {\n      observer.unsubscribe();\n    });\n  }\n\n  displayInfo(data: any) {\n    for (const details of this.info) {\n      if (details.rid == data.id) {\n        this.current = details;\n        this.current.custom = details.custom;\n        return;\n      }\n    }\n    this.newDetails(data);\n  }\n\n  newDetails(data: any) {\n    if (!data.custom) {\n      this.createDetails(\n        data.avatar,\n        [data.name, this.auth.getUserInfo().name],\n        data.id,\n        [],\n        false\n      );\n    } else {\n      this.fetchNames(data.id)\n        .then((res) => {\n          this.createDetails(data.avatar, res.names, data.id, res.ids, true);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }\n\n  createDetails(\n    url: string,\n    names: string[],\n    id: string,\n    uids: string[],\n    custom: any\n  ) {\n    let details = new Details(url, names, id, uids);\n    this.info.push(details);\n    this.current = details;\n    this.current.custom = custom;\n  }\n\n  async fetchNames(id: any) {\n    return await this.userService.getNames('names/' + id).toPromise();\n  }\n\n  updateDetails(v: any) {\n    this.info.forEach((el) => {\n      if (el.rid == this.current.rid) {\n        el.idS = v.details.id;\n        el.uNames = v.details.name;\n        this.current = el;\n      }\n    });\n  }\n\n  get currentRoom() {\n    return this.current;\n  }\n\n  get isDemo() {\n    return this.auth.isDemo();\n  }\n}\n","<div class=\"sidenav\">\n    <div class=\"container\">\n        <div class=\"avatar-upload\">\n            <img [src]=\"currentRoom?.avatar\" class=\"avatar-preview\">\n        </div>\n    </div>\n    <div class=\"names\">\n        <h1 class=\"header\">Chat members</h1>\n        <h1 class=\"header user\" *ngFor=\"let name of currentRoom?.unames\">{{name}}</h1>\n    </div>\n    <ng-container *ngIf=\"currentRoom?.custom && !isDemo\">\n        <div class=\"profile-item\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">\n            <i class=\"fas fa-user-plus\"></i>\n            <div class=\"details \">\n                <h1 style=\"margin: 0;\" class=\"header\">Add Users\n                </h1>\n            </div>\n        </div>\n    </ng-container>\n</div>\n<!--bound child to current and event emmiter to a method in parent-->\n<pop-up (selected)=\"updateDetails($event)\" [details]=currentRoom></pop-up>","import { OnDestroy, ViewChild } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { DataShareService } from '../services/data-share.service';\r\nimport { SocketioService } from '../services/socketio.service';\r\n\r\n@Component({\r\n  selector: 'input-field',\r\n  templateUrl: './input-field.component.html',\r\n  styleUrls: ['./input-field.component.css'],\r\n})\r\nexport class InputFieldComponent implements OnInit, OnDestroy {\r\n  private receiver: string = '';\r\n  private custom: any;\r\n  private roomId: any;\r\n  public comment: string = '';\r\n  public url: string = '';\r\n  private observers: Subscription[] = [];\r\n\r\n  constructor(\r\n    private forwardMessage: DataShareService,\r\n    private auth: AuthService,\r\n    private io: SocketioService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.observers.push(\r\n      this.forwardMessage.message.subscribe((message: any = []) => {\r\n        this.receiver = message.id;\r\n        this.custom = message.custom;\r\n      })\r\n    );\r\n\r\n    //avatar url\r\n    this.observers.push(\r\n      this.forwardMessage.changeUrl.subscribe((url: string) => {\r\n        this.url = url;\r\n      })\r\n    );\r\n\r\n    //which room to append the comment\r\n    this.observers.push(\r\n      this.forwardMessage.writeToRoom.subscribe((id: string) => {\r\n        this.roomId = id;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.observers.forEach((observer) => {\r\n      observer.unsubscribe();\r\n    });\r\n  }\r\n\r\n  newComment() {\r\n    if (this.comment.trim().length < 2) {\r\n      return;\r\n    }\r\n\r\n    let newComment = {\r\n      sender: this.auth.getUserInfo().id,\r\n      senderName: this.auth.getUserInfo().name,\r\n      receiver: this.receiver,\r\n      text: this.comment.trim(),\r\n      url: this.url,\r\n      custom: this.custom,\r\n      roomId: this.roomId,\r\n    };\r\n\r\n    this.forwardMessage.sendlocal(newComment);\r\n    this.io.messageSubmit(newComment);\r\n    this.comment = '';\r\n  }\r\n}\r\n","<form class=\"input-field \">\n    <div class=\"search-chat send-message \">\n        <i class=\"fas fa-envelope\"></i>\n        <input name=\"comment\" [(ngModel)]=\"comment\" type=\"text\" (keyup.enter)=\"newComment()\" class=\"my-input-send ts-send \" placeholder=\"type your message here...\">\n    </div>\n    <i class=\"fas fa-paper-plane \" (click)=\"newComment()\"></i>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatAreaComponent } from './chat-area/chat-area.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { UsersComponent } from './users/users.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: 'chat/:id',\n        component: ChatAreaComponent,\n        canActivate: [AuthGuardService],\n        outlet: 'chatArea',\n      },\n    ],\n  },\n  {\n    path: 'logout',\n    redirectTo: 'login',\n    pathMatch: 'full',\n  },\n  { path: 'users', component: UsersComponent, canActivate: [AuthGuardService] },\n  { path: 'login', component: LoginComponent },\n  { path: '**', component: NotFoundComponent, redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  private authService: AuthService;\n  private router: Router;\n  private observers: Subscription[] = [];\n\n  constructor(a: AuthService, r: Router) {\n    this.authService = a;\n    this.router = r;\n  }\n\n  ngOnDestroy(): void {\n    this.observers.forEach((obs) => {\n      obs.unsubscribe();\n    });\n  }\n\n  //login validators\n  loginForm = new FormGroup({\n    email: new FormControl('', [\n      Validators.email,\n      Validators.minLength(3),\n      Validators.required,\n    ]),\n    password: new FormControl('', [\n      Validators.minLength(3),\n      Validators.required,\n    ]),\n  });\n\n  login() {\n    //check if the form is valid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.observers.push(\n      this.authService\n        .validate(\n          this.loginForm.value.email,\n          this.loginForm.value.password,\n          'login'\n        )\n        .subscribe(\n          (response) => {\n            localStorage.removeItem('pass');\n            this.router.navigate(['']);\n          },\n          //we handle the error locally so we can display detailed messages to the user\n          (error: any = []) => {\n            if (error instanceof HttpErrorResponse) {\n              if (error.error.message[0] == 'Incorrect password') {\n                console.log(error.error.message[0]);\n                this.loginForm.controls['password'].setErrors({\n                  invalid: true,\n                });\n              } else if (error.error.message[0] == 'Not Registered') {\n                console.log(error.error.message[0]);\n                this.loginForm.controls['email'].setErrors({ invalid: true });\n              } else {\n                console.log(error.error.message[0]);\n              }\n            } else {\n              throw error;\n            }\n          }\n        )\n    );\n  }\n\n  //login form\n  get name() {\n    return this.loginForm.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  ngOnInit(): void {\n    this.authService.removeUserInfo();\n  }\n}\n","<div class=\"limiter\">\n    <div class=\"container-login100\">\n        <div class=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n            <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n                <span class=\"login100-form-title p-b-33\">\n                    ChatAway <i class=\"fas fa-comments\"></i>\n                </span>\n\n                <div class=\"wrap-input100 validate-input\" [class.input-outline]=\"name!.touched && !name!.invalid\" [class.error-outline]=\"name!.invalid && name!.touched\">\n                    <input class=\"input100\" formControlName=\"email\" name=\"email\" type=\"text\" name=\"email\" placeholder=\"Email\">\n                    <span class=\"focus-input100-1\"></span>\n                    <span class=\"focus-input100-2\"></span>\n                </div>\n\n                <div class=\"wrap-input100 rs1 validate-input\" [class.input-outline]=\"password!.touched && !password!.invalid\" [class.error-outline]=\"password!.invalid && password!.touched\">\n                    <input class=\"input100\" formControlName=\"password\" name=\"password\" type=\"password\" placeholder=\"Password\">\n                    <span class=\"focus-input100-1\"></span>\n                    <span class=\"focus-input100-2\"></span>\n                </div>\n\n                <div class=\"container-login100-form-btn m-t-20\">\n                    <button type=\"submit\" name=\"login \" class=\"login100-form-btn\">\n                        Sign in\n                    </button>\n                </div>\n                <div class=\"text-center\" style=\"margin-top: 10px;\">\n                    <span class=\"txt1\">\n                        Create an account?\n                    </span>\n                    <button data-toggle=\"modal\" type=\"button\" data-target=\"#register\" class=\"button\">Register</button>\n                </div>\n                <div class=\"text-center\" style=\"margin-top: -4px;\">\n                    <span class=\"txt1\">\n                        Feeling lazy?\n                    </span>\n                    <button data-toggle=\"modal\" type=\"button\" data-target=\"#demo\" class=\"button\">Demo Account</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<app-register></app-register>\n<app-demo></app-demo>","import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n  AfterViewInit,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { Details } from '../Models/details';\nimport { User } from '../Models/user';\nimport { DataShareService } from '../services/data-share.service';\nimport { SocketioService } from '../services/socketio.service';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'pop-up',\n  templateUrl: './pop-up.component.html',\n  styleUrls: ['./pop-up.component.css'],\n})\nexport class PopUpComponent implements OnInit, OnDestroy, AfterViewInit {\n  //\n  @Input() details: Details | undefined;\n  @Output() selected: EventEmitter<User> = new EventEmitter<User>();\n  @ViewChild('close') button: any;\n\n  private users: User[] = [];\n  private observers: Subscription[] = [];\n  private btn!: HTMLElement;\n  //private usersPipe$!:Observable<any>;\n\n  constructor(\n    private dataShare: DataShareService,\n    private io: SocketioService\n  ) {}\n\n  ngAfterViewInit() {\n    this.btn = this.button.nativeElement;\n  }\n\n  ngOnInit(): void {\n    //get users\n    //this.users$ = this.dataShare.passUsers\n    this.observers.push(\n      this.dataShare.passUsers.subscribe((users: any) => {\n        for (const user of users) {\n          if (!user.custom) {\n            this.users.push(new User(user));\n          }\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.observers.forEach((observer) => {\n      observer.unsubscribe();\n    });\n  }\n\n  submit(index: number) {\n    this.io.invite(this.users[index].details.id, this.details?.rid);\n    this.selected.emit(this.users[index]);\n    this.btn.click();\n  }\n\n  get all() {\n    return this.users;\n  }\n}\n","<!-- Modal-->\n<div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered fixed-width\" role=\"document\">\n        <div class=\"modal-content content\">\n            <div class=\"modal-header\">\n                <h5 style=\"font-size: 24px;\" class=\"modal-title\" id=\"exampleModalLongTitle\">Select Users</h5>\n                <button type=\"button\" style=\"outline: none;\" #close class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <ng-container *ngFor=\"let user of all; let i=index\">\n                    <div class=\"profile-item\" *ngIf=\"!details?.ids?.includes(user?.details?.id)\" (click)=\"submit(i)\">\n                        <div class=\"details \">\n                            {{user.details.name}}\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n</div>","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appChat]',\n})\nexport class ChatDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerService {\n  constructor() {}\n\n  public handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(`Backend returned code ${error.status}`);\n      console.log(error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}